package com.imum.cpms.model.masters.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 27 11:08:14 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustInstAddressEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CUSTINSTADDRSEQ {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getCUSTINSTADDRSEQ();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setCUSTINSTADDRSEQ((BigDecimal)value);
            }
        }
        ,
        InstCustID {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getInstCustID();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setInstCustID((BigDecimal)value);
            }
        }
        ,
        ADDRESSDTLSEQ {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getADDRESSDTLSEQ();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setADDRESSDTLSEQ((BigDecimal)value);
            }
        }
        ,
        CreatedBy {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updatedate {
            public Object get(CustInstAddressEOImpl obj) {
                return obj.getUpdatedate();
            }

            public void put(CustInstAddressEOImpl obj, Object value) {
                obj.setUpdatedate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CustInstAddressEOImpl object);

        public abstract void put(CustInstAddressEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CUSTINSTADDRSEQ = AttributesEnum.CUSTINSTADDRSEQ.index();
    public static final int INSTCUSTID = AttributesEnum.InstCustID.index();
    public static final int ADDRESSDTLSEQ = AttributesEnum.ADDRESSDTLSEQ.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDATE = AttributesEnum.Updatedate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustInstAddressEOImpl() {
    }

    /**
     * Gets the attribute value for CUSTINSTADDRSEQ, using the alias name CUSTINSTADDRSEQ.
     * @return the CUSTINSTADDRSEQ
     */
    public BigDecimal getCUSTINSTADDRSEQ() {
        return (BigDecimal)getAttributeInternal(CUSTINSTADDRSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for CUSTINSTADDRSEQ.
     * @param value value to set the CUSTINSTADDRSEQ
     */
    public void setCUSTINSTADDRSEQ(BigDecimal value) {
        setAttributeInternal(CUSTINSTADDRSEQ, value);
    }

    /**
     * Gets the attribute value for InstCustID, using the alias name InstCustID.
     * @return the InstCustID
     */
    public BigDecimal getInstCustID() {
        return (BigDecimal)getAttributeInternal(INSTCUSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InstCustID.
     * @param value value to set the InstCustID
     */
    public void setInstCustID(BigDecimal value) {
        setAttributeInternal(INSTCUSTID, value);
    }

    /**
     * Gets the attribute value for ADDRESSDTLSEQ, using the alias name ADDRESSDTLSEQ.
     * @return the ADDRESSDTLSEQ
     */
    public BigDecimal getADDRESSDTLSEQ() {
        return (BigDecimal)getAttributeInternal(ADDRESSDTLSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for ADDRESSDTLSEQ.
     * @param value value to set the ADDRESSDTLSEQ
     */
    public void setADDRESSDTLSEQ(BigDecimal value) {
        setAttributeInternal(ADDRESSDTLSEQ, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updatedate, using the alias name Updatedate.
     * @return the Updatedate
     */
    public Timestamp getUpdatedate() {
        return (Timestamp)getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedate.
     * @param value value to set the Updatedate
     */
    public void setUpdatedate(Timestamp value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param cUSTINSTADDRSEQ key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal cUSTINSTADDRSEQ) {
        return new Key(new Object[]{cUSTINSTADDRSEQ});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.masters.eo.CustInstAddressEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        CallableStatement stmt = null;
            try {
                stmt = getDBTransaction().createCallableStatement("{call  sequence_mst_trigger(?,?) }", 0);
                stmt.setString(1, "CUST_INST_ADDR_SEQ");            
                stmt.registerOutParameter(2, Types.BIGINT);
                stmt.execute();           
                BigDecimal SeqNum = stmt.getBigDecimal(2);
                setCUSTINSTADDRSEQ(SeqNum);
            }  catch (Exception e) {
                            e.printStackTrace();
                   }

  }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
