package com.imum.cpms.model.masters.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 04 12:44:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PVTWRITEOFFHEADERVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        WRITEOFFHDRSeq {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getWRITEOFFHDRSeq();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setWRITEOFFHDRSeq((BigDecimal)value);
            }
        }
        ,
        WRITEOFFREQDATE {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getWRITEOFFREQDATE();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setWRITEOFFREQDATE((Timestamp)value);
            }
        }
        ,
        PVTCOUNT {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getPVTCOUNT();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setPVTCOUNT((BigDecimal)value);
            }
        }
        ,
        WRITEOFFREQSTATUS {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getWRITEOFFREQSTATUS();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setWRITEOFFREQSTATUS((Integer)value);
            }
        }
        ,
        ACTIONEDBy {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getACTIONEDBy();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setACTIONEDBy((String)value);
            }
        }
        ,
        ACTIONEDDate {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getACTIONEDDate();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setACTIONEDDate((Timestamp)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        updateddate {
            public Object get(PVTWRITEOFFHEADERVORowImpl obj) {
                return obj.getupdateddate();
            }

            public void put(PVTWRITEOFFHEADERVORowImpl obj, Object value) {
                obj.setupdateddate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PVTWRITEOFFHEADERVORowImpl object);

        public abstract void put(PVTWRITEOFFHEADERVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int WRITEOFFHDRSEQ = AttributesEnum.WRITEOFFHDRSeq.index();
    public static final int WRITEOFFREQDATE = AttributesEnum.WRITEOFFREQDATE.index();
    public static final int PVTCOUNT = AttributesEnum.PVTCOUNT.index();
    public static final int WRITEOFFREQSTATUS = AttributesEnum.WRITEOFFREQSTATUS.index();
    public static final int ACTIONEDBY = AttributesEnum.ACTIONEDBy.index();
    public static final int ACTIONEDDATE = AttributesEnum.ACTIONEDDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.updateddate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PVTWRITEOFFHEADERVORowImpl() {
    }

    /**
     * Gets PVTWRITEOFFHEADEREO entity object.
     * @return the PVTWRITEOFFHEADEREO
     */
    public EntityImpl getPVTWRITEOFFHEADEREO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for WRITEOFF_HDR_Seq using the alias name WRITEOFFHDRSeq.
     * @return the WRITEOFF_HDR_Seq
     */
    public BigDecimal getWRITEOFFHDRSeq() {
        return (BigDecimal) getAttributeInternal(WRITEOFFHDRSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for WRITEOFF_HDR_Seq using the alias name WRITEOFFHDRSeq.
     * @param value value to set the WRITEOFF_HDR_Seq
     */
    public void setWRITEOFFHDRSeq(BigDecimal value) {
        setAttributeInternal(WRITEOFFHDRSEQ, value);
    }

    /**
     * Gets the attribute value for WRITEOFF_REQ_DATE using the alias name WRITEOFFREQDATE.
     * @return the WRITEOFF_REQ_DATE
     */
    public Timestamp getWRITEOFFREQDATE() {
        return (Timestamp) getAttributeInternal(WRITEOFFREQDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for WRITEOFF_REQ_DATE using the alias name WRITEOFFREQDATE.
     * @param value value to set the WRITEOFF_REQ_DATE
     */
    public void setWRITEOFFREQDATE(Timestamp value) {
        setAttributeInternal(WRITEOFFREQDATE, value);
    }

    /**
     * Gets the attribute value for PVT_COUNT using the alias name PVTCOUNT.
     * @return the PVT_COUNT
     */
    public BigDecimal getPVTCOUNT() {
        return (BigDecimal) getAttributeInternal(PVTCOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for PVT_COUNT using the alias name PVTCOUNT.
     * @param value value to set the PVT_COUNT
     */
    public void setPVTCOUNT(BigDecimal value) {
        setAttributeInternal(PVTCOUNT, value);
    }

    /**
     * Gets the attribute value for WRITEOFF_REQ_STATUS_ID using the alias name WRITEOFFREQSTATUS.
     * @return the WRITEOFF_REQ_STATUS_ID
     */
    public Integer getWRITEOFFREQSTATUS() {
        return (Integer) getAttributeInternal(WRITEOFFREQSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for WRITEOFF_REQ_STATUS_ID using the alias name WRITEOFFREQSTATUS.
     * @param value value to set the WRITEOFF_REQ_STATUS_ID
     */
    public void setWRITEOFFREQSTATUS(Integer value) {
        setAttributeInternal(WRITEOFFREQSTATUS, value);
    }

    /**
     * Gets the attribute value for ACTIONED_By using the alias name ACTIONEDBy.
     * @return the ACTIONED_By
     */
    public String getACTIONEDBy() {
        return (String) getAttributeInternal(ACTIONEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIONED_By using the alias name ACTIONEDBy.
     * @param value value to set the ACTIONED_By
     */
    public void setACTIONEDBy(String value) {
        setAttributeInternal(ACTIONEDBY, value);
    }

    /**
     * Gets the attribute value for ACTIONED_Date using the alias name ACTIONEDDate.
     * @return the ACTIONED_Date
     */
    public Timestamp getACTIONEDDate() {
        return (Timestamp) getAttributeInternal(ACTIONEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTIONED_Date using the alias name ACTIONEDDate.
     * @param value value to set the ACTIONED_Date
     */
    public void setACTIONEDDate(Timestamp value) {
        setAttributeInternal(ACTIONEDDATE, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for updated_date using the alias name updateddate.
     * @return the updated_date
     */
    public Timestamp getupdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for updated_date using the alias name updateddate.
     * @param value value to set the updated_date
     */
    public void setupdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
