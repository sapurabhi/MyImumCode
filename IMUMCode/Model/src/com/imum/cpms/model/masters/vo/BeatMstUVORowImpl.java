package com.imum.cpms.model.masters.vo;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 22 15:23:39 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BeatMstUVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BeatCode {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getBeatCode();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setBeatCode((String)value);
            }
        }
        ,
        ZoneCode {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getZoneCode();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setZoneCode((String)value);
            }
        }
        ,
        BeatName {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getBeatName();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setBeatName((String)value);
            }
        }
        ,
        GeoLatDeg {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getGeoLatDeg();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setGeoLatDeg((Float)value);
            }
        }
        ,
        GeoLonDeg {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getGeoLonDeg();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setGeoLonDeg((Float)value);
            }
        }
        ,
        GoLiveDate {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getGoLiveDate();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setGoLiveDate((Date)value);
            }
        }
        ,
        ParkingCap {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getParkingCap();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setParkingCap((Integer)value);
            }
        }
        ,
        RemoveVehicle {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getRemoveVehicle();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setRemoveVehicle((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setUpdatedBy((String)value);
            }
        }
        ,
        UpdatedDate {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getUpdatedDate();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setUpdatedDate((Timestamp)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        clickonedit {
            public Object get(BeatMstUVORowImpl obj) {
                return obj.getclickonedit();
            }

            public void put(BeatMstUVORowImpl obj, Object value) {
                obj.setclickonedit((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;


        private static final int firstIndex = 0;

        public abstract Object get(BeatMstUVORowImpl object);

        public abstract void put(BeatMstUVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BEATCODE = AttributesEnum.BeatCode.index();
    public static final int ZONECODE = AttributesEnum.ZoneCode.index();
    public static final int BEATNAME = AttributesEnum.BeatName.index();
    public static final int GEOLATDEG = AttributesEnum.GeoLatDeg.index();
    public static final int GEOLONDEG = AttributesEnum.GeoLonDeg.index();
    public static final int GOLIVEDATE = AttributesEnum.GoLiveDate.index();
    public static final int PARKINGCAP = AttributesEnum.ParkingCap.index();
    public static final int REMOVEVEHICLE = AttributesEnum.RemoveVehicle.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int CLICKONEDIT = AttributesEnum.clickonedit.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BeatMstUVORowImpl() {
    }

    /**
     * Gets BeatMstEO entity object.
     * @return the BeatMstEO
     */
    public EntityImpl getBeatMstEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for Beat_Code using the alias name BeatCode.
     * @return the Beat_Code
     */
    public String getBeatCode() {
        return (String) getAttributeInternal(BEATCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Beat_Code using the alias name BeatCode.
     * @param value value to set the Beat_Code
     */
    public void setBeatCode(String value) {
        setAttributeInternal(BEATCODE, value);
    }

    /**
     * Gets the attribute value for Zone_Code using the alias name ZoneCode.
     * @return the Zone_Code
     */
    public String getZoneCode() {
        return (String) getAttributeInternal(ZONECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Zone_Code using the alias name ZoneCode.
     * @param value value to set the Zone_Code
     */
    public void setZoneCode(String value) {
        setAttributeInternal(ZONECODE, value);
    }

    /**
     * Gets the attribute value for Beat_Name using the alias name BeatName.
     * @return the Beat_Name
     */
    public String getBeatName() {
        return (String) getAttributeInternal(BEATNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for Beat_Name using the alias name BeatName.
     * @param value value to set the Beat_Name
     */
    public void setBeatName(String value) {
        setAttributeInternal(BEATNAME, value);
    }

    /**
     * Gets the attribute value for Geo_Lat_Deg using the alias name GeoLatDeg.
     * @return the Geo_Lat_Deg
     */
    public Float getGeoLatDeg() {
        return (Float) getAttributeInternal(GEOLATDEG);
    }

    /**
     * Sets <code>value</code> as attribute value for Geo_Lat_Deg using the alias name GeoLatDeg.
     * @param value value to set the Geo_Lat_Deg
     */
    public void setGeoLatDeg(Float value) {
        setAttributeInternal(GEOLATDEG, value);
    }

    /**
     * Gets the attribute value for Geo_Lon_Deg using the alias name GeoLonDeg.
     * @return the Geo_Lon_Deg
     */
    public Float getGeoLonDeg() {
        return (Float) getAttributeInternal(GEOLONDEG);
    }

    /**
     * Sets <code>value</code> as attribute value for Geo_Lon_Deg using the alias name GeoLonDeg.
     * @param value value to set the Geo_Lon_Deg
     */
    public void setGeoLonDeg(Float value) {
        setAttributeInternal(GEOLONDEG, value);
    }

    /**
     * Gets the attribute value for GoLive_Date using the alias name GoLiveDate.
     * @return the GoLive_Date
     */
    public Date getGoLiveDate() {
        return (Date) getAttributeInternal(GOLIVEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for GoLive_Date using the alias name GoLiveDate.
     * @param value value to set the GoLive_Date
     */
    public void setGoLiveDate(Date value) {
        setAttributeInternal(GOLIVEDATE, value);
    }

    /**
     * Gets the attribute value for Parking_Cap using the alias name ParkingCap.
     * @return the Parking_Cap
     */
    public Integer getParkingCap() {
        return (Integer) getAttributeInternal(PARKINGCAP);
    }

    /**
     * Sets <code>value</code> as attribute value for Parking_Cap using the alias name ParkingCap.
     * @param value value to set the Parking_Cap
     */
    public void setParkingCap(Integer value) {
        setAttributeInternal(PARKINGCAP, value);
    }

    /**
     * Gets the attribute value for Remove_Vehicle using the alias name RemoveVehicle.
     * @return the Remove_Vehicle
     */
    public String getRemoveVehicle() {
        return (String) getAttributeInternal(REMOVEVEHICLE);
    }

    /**
     * Sets <code>value</code> as attribute value for Remove_Vehicle using the alias name RemoveVehicle.
     * @param value value to set the Remove_Vehicle
     */
    public void setRemoveVehicle(String value) {
        setAttributeInternal(REMOVEVEHICLE, value);
    }


    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_By using the alias name UpdatedBy.
     * @return the Updated_By
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_By using the alias name UpdatedBy.
     * @param value value to set the Updated_By
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updated_Date using the alias name UpdatedDate.
     * @return the Updated_Date
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_Date using the alias name UpdatedDate.
     * @param value value to set the Updated_Date
     */
    public void setUpdatedDate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for Active_Flag using the alias name ActiveFlag.
     * @return the Active_Flag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_Flag using the alias name ActiveFlag.
     * @param value value to set the Active_Flag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }


    
    

    /**
     * Gets the attribute value for the calculated attribute clickonedit.
     * @return the clickonedit
     */
    public Integer getclickonedit() {
        byte entityState = this.getEntity(0).getEntityState();
                return new Integer(entityState);
        //return (Integer) getAttributeInternal(CLICKONEDIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute clickonedit.
     * @param value value to set the  clickonedit
     */
    public void setclickonedit(Integer value) {
        setAttributeInternal(CLICKONEDIT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
