package com.imum.cpms.model.masters.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 24 11:54:35 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VehicleCountrymstlngVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        vehplatecntlngSeq {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getvehplatecntlngSeq();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setvehplatecntlngSeq((BigDecimal)value);
            }
        }
        ,
        PlateCountryID {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getPlateCountryID();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setPlateCountryID((Integer)value);
            }
        }
        ,
        LNGCODE {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getLNGCODE();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setLNGCODE((String)value);
            }
        }
        ,
        PlateCountryName {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getPlateCountryName();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setPlateCountryName((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updatedate {
            public Object get(VehicleCountrymstlngVORowImpl obj) {
                return obj.getUpdatedate();
            }

            public void put(VehicleCountrymstlngVORowImpl obj, Object value) {
                obj.setUpdatedate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VehicleCountrymstlngVORowImpl object);

        public abstract void put(VehicleCountrymstlngVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int VEHPLATECNTLNGSEQ = AttributesEnum.vehplatecntlngSeq.index();
    public static final int PLATECOUNTRYID = AttributesEnum.PlateCountryID.index();
    public static final int LNGCODE = AttributesEnum.LNGCODE.index();
    public static final int PLATECOUNTRYNAME = AttributesEnum.PlateCountryName.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDATE = AttributesEnum.Updatedate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VehicleCountrymstlngVORowImpl() {
    }

    /**
     * Gets VehicleCountrymstlngEO entity object.
     * @return the VehicleCountrymstlngEO
     */
    public EntityImpl getVehicleCountrymstlngEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for veh_plate_cnt_lng_Seq using the alias name vehplatecntlngSeq.
     * @return the veh_plate_cnt_lng_Seq
     */
    public BigDecimal getvehplatecntlngSeq() {
        return (BigDecimal) getAttributeInternal(VEHPLATECNTLNGSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for veh_plate_cnt_lng_Seq using the alias name vehplatecntlngSeq.
     * @param value value to set the veh_plate_cnt_lng_Seq
     */
    public void setvehplatecntlngSeq(BigDecimal value) {
        setAttributeInternal(VEHPLATECNTLNGSEQ, value);
    }

    /**
     * Gets the attribute value for Plate_Country_ID using the alias name PlateCountryID.
     * @return the Plate_Country_ID
     */
    public Integer getPlateCountryID() {
        return (Integer) getAttributeInternal(PLATECOUNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for Plate_Country_ID using the alias name PlateCountryID.
     * @param value value to set the Plate_Country_ID
     */
    public void setPlateCountryID(Integer value) {
        setAttributeInternal(PLATECOUNTRYID, value);
    }

    /**
     * Gets the attribute value for LNG_CODE using the alias name LNGCODE.
     * @return the LNG_CODE
     */
    public String getLNGCODE() {
        return (String) getAttributeInternal(LNGCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for LNG_CODE using the alias name LNGCODE.
     * @param value value to set the LNG_CODE
     */
    public void setLNGCODE(String value) {
        setAttributeInternal(LNGCODE, value);
    }

    /**
     * Gets the attribute value for Plate_Country_Name using the alias name PlateCountryName.
     * @return the Plate_Country_Name
     */
    public String getPlateCountryName() {
        return (String) getAttributeInternal(PLATECOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for Plate_Country_Name using the alias name PlateCountryName.
     * @param value value to set the Plate_Country_Name
     */
    public void setPlateCountryName(String value) {
        setAttributeInternal(PLATECOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Update_date using the alias name Updatedate.
     * @return the Update_date
     */
    public Timestamp getUpdatedate() {
        return (Timestamp) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Update_date using the alias name Updatedate.
     * @param value value to set the Update_date
     */
    public void setUpdatedate(Timestamp value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
