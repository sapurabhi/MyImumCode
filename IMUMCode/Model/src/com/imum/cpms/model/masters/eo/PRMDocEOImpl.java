package com.imum.cpms.model.masters.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 06 17:43:25 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PRMDocEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DOCSEQ {
            public Object get(PRMDocEOImpl obj) {
                return obj.getDOCSEQ();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setDOCSEQ((BigDecimal)value);
            }
        }
        ,
        PRMHeaderseq {
            public Object get(PRMDocEOImpl obj) {
                return obj.getPRMHeaderseq();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setPRMHeaderseq((BigDecimal)value);
            }
        }
        ,
        doctype {
            public Object get(PRMDocEOImpl obj) {
                return obj.getdoctype();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setdoctype((String)value);
            }
        }
        ,
        remarks {
            public Object get(PRMDocEOImpl obj) {
                return obj.getremarks();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setremarks((String)value);
            }
        }
        ,
        filepath {
            public Object get(PRMDocEOImpl obj) {
                return obj.getfilepath();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setfilepath((String)value);
            }
        }
        ,
        deleteflag {
            public Object get(PRMDocEOImpl obj) {
                return obj.getdeleteflag();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setdeleteflag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PRMDocEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PRMDocEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PRMDocEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(PRMDocEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        DOCDesc {
            public Object get(PRMDocEOImpl obj) {
                return obj.getDOCDesc();
            }

            public void put(PRMDocEOImpl obj, Object value) {
                obj.setDOCDesc((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PRMDocEOImpl object);

        public abstract void put(PRMDocEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DOCSEQ = AttributesEnum.DOCSEQ.index();
    public static final int PRMHEADERSEQ = AttributesEnum.PRMHeaderseq.index();
    public static final int DOCTYPE = AttributesEnum.doctype.index();
    public static final int REMARKS = AttributesEnum.remarks.index();
    public static final int FILEPATH = AttributesEnum.filepath.index();
    public static final int DELETEFLAG = AttributesEnum.deleteflag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int DOCDESC = AttributesEnum.DOCDesc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PRMDocEOImpl() {
    }

    /**
     * Gets the attribute value for DOCSEQ, using the alias name DOCSEQ.
     * @return the DOCSEQ
     */
    public BigDecimal getDOCSEQ() {
        return (BigDecimal)getAttributeInternal(DOCSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for DOCSEQ.
     * @param value value to set the DOCSEQ
     */
    public void setDOCSEQ(BigDecimal value) {
        setAttributeInternal(DOCSEQ, value);
    }

    /**
     * Gets the attribute value for PRMHeaderseq, using the alias name PRMHeaderseq.
     * @return the PRMHeaderseq
     */
    public BigDecimal getPRMHeaderseq() {
        return (BigDecimal)getAttributeInternal(PRMHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for PRMHeaderseq.
     * @param value value to set the PRMHeaderseq
     */
    public void setPRMHeaderseq(BigDecimal value) {
        setAttributeInternal(PRMHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for doctype, using the alias name doctype.
     * @return the doctype
     */
    public String getdoctype() {
        return (String)getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for doctype.
     * @param value value to set the doctype
     */
    public void setdoctype(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for remarks, using the alias name remarks.
     * @return the remarks
     */
    public String getremarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for remarks.
     * @param value value to set the remarks
     */
    public void setremarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for filepath, using the alias name filepath.
     * @return the filepath
     */
    public String getfilepath() {
        return (String)getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for filepath.
     * @param value value to set the filepath
     */
    public void setfilepath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * Gets the attribute value for deleteflag, using the alias name deleteflag.
     * @return the deleteflag
     */
    public String getdeleteflag() {
        return (String)getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for deleteflag.
     * @param value value to set the deleteflag
     */
    public void setdeleteflag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for DOCDesc, using the alias name DOCDesc.
     * @return the DOCDesc
     */
    public String getDOCDesc() {
        return (String)getAttributeInternal(DOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DOCDesc.
     * @param value value to set the DOCDesc
     */
    public void setDOCDesc(String value) {
        setAttributeInternal(DOCDESC, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param dOCSEQ key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal dOCSEQ) {
        return new Key(new Object[]{dOCSEQ});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.masters.eo.PRMDocEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
//        CallableStatement stmt = null;
//                try {
//                    stmt = getDBTransaction().createCallableStatement("{call  sequence_mst_trigger(?,?) }", 0);
//                    stmt.setString(1, "PRM_DOC_SEQ");            
//                    stmt.registerOutParameter(2, Types.BIGINT);
//                    stmt.execute();           
//                    BigDecimal SeqNum = stmt.getBigDecimal(2);
//                    setDOCSEQ(SeqNum);
//                    getDBTransaction().commit();
//                }  catch (Exception e) {
//                                e.printStackTrace();
//                       }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
