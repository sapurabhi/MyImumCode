package com.imum.cpms.model.masters.vo;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 23 20:51:33 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VehicleCountrymstVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PlateCountryID {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getPlateCountryID();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setPlateCountryID((Integer)value);
            }
        }
        ,
        PlateCountryName {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getPlateCountryName();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setPlateCountryName((String)value);
            }
        }
        ,
        CountryOrder {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getCountryOrder();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setCountryOrder((Integer)value);
            }
        }
        ,
        mParkPlateCountry {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getmParkPlateCountry();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setmParkPlateCountry((String)value);
            }
        }
        ,
        ActiveFlag {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getActiveFlag();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setActiveFlag((String)value);
            }
        }
        ,
        Countrycode {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getCountrycode();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setCountrycode((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        UpdatedBy {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getUpdatedBy();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setUpdatedBy((String)value);
            }
        }
        ,
        UpdatedDate {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getUpdatedDate();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setUpdatedDate((Timestamp)value);
            }
        }
        ,
        adpsyncreqflag {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getadpsyncreqflag();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setadpsyncreqflag((String)value);
            }
        }
        ,
        adpplatecountryID {
            public Object get(VehicleCountrymstVORowImpl obj) {
                return obj.getadpplatecountryID();
            }

            public void put(VehicleCountrymstVORowImpl obj, Object value) {
                obj.setadpplatecountryID((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VehicleCountrymstVORowImpl object);

        public abstract void put(VehicleCountrymstVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int PLATECOUNTRYID = AttributesEnum.PlateCountryID.index();
    public static final int PLATECOUNTRYNAME = AttributesEnum.PlateCountryName.index();
    public static final int COUNTRYORDER = AttributesEnum.CountryOrder.index();
    public static final int MPARKPLATECOUNTRY = AttributesEnum.mParkPlateCountry.index();
    public static final int ACTIVEFLAG = AttributesEnum.ActiveFlag.index();
    public static final int COUNTRYCODE = AttributesEnum.Countrycode.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int ADPSYNCREQFLAG = AttributesEnum.adpsyncreqflag.index();
    public static final int ADPPLATECOUNTRYID = AttributesEnum.adpplatecountryID.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VehicleCountrymstVORowImpl() {
    }

    /**
     * Gets VehicleCountrymstEO entity object.
     * @return the VehicleCountrymstEO
     */
    public EntityImpl getVehicleCountrymstEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for Plate_Country_ID using the alias name PlateCountryID.
     * @return the Plate_Country_ID
     */
    public Integer getPlateCountryID() {
        return (Integer) getAttributeInternal(PLATECOUNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for Plate_Country_ID using the alias name PlateCountryID.
     * @param value value to set the Plate_Country_ID
     */
    public void setPlateCountryID(Integer value) {
        setAttributeInternal(PLATECOUNTRYID, value);
    }

    /**
     * Gets the attribute value for Plate_Country_Name using the alias name PlateCountryName.
     * @return the Plate_Country_Name
     */
    public String getPlateCountryName() {
        return (String) getAttributeInternal(PLATECOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for Plate_Country_Name using the alias name PlateCountryName.
     * @param value value to set the Plate_Country_Name
     */
    public void setPlateCountryName(String value) {
        setAttributeInternal(PLATECOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for Country_Order using the alias name CountryOrder.
     * @return the Country_Order
     */
    public Integer getCountryOrder() {
        return (Integer) getAttributeInternal(COUNTRYORDER);
    }

    /**
     * Sets <code>value</code> as attribute value for Country_Order using the alias name CountryOrder.
     * @param value value to set the Country_Order
     */
    public void setCountryOrder(Integer value) {
        setAttributeInternal(COUNTRYORDER, value);
    }

    /**
     * Gets the attribute value for mPark_Plate_Country using the alias name mParkPlateCountry.
     * @return the mPark_Plate_Country
     */
    public String getmParkPlateCountry() {
        return (String) getAttributeInternal(MPARKPLATECOUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for mPark_Plate_Country using the alias name mParkPlateCountry.
     * @param value value to set the mPark_Plate_Country
     */
    public void setmParkPlateCountry(String value) {
        setAttributeInternal(MPARKPLATECOUNTRY, value);
    }

    /**
     * Gets the attribute value for Active_Flag using the alias name ActiveFlag.
     * @return the Active_Flag
     */
    public String getActiveFlag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_Flag using the alias name ActiveFlag.
     * @param value value to set the Active_Flag
     */
    public void setActiveFlag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for Country_code using the alias name Countrycode.
     * @return the Country_code
     */
    public String getCountrycode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Country_code using the alias name Countrycode.
     * @param value value to set the Country_code
     */
    public void setCountrycode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_By using the alias name UpdatedBy.
     * @return the Updated_By
     */
    public String getUpdatedBy() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_By using the alias name UpdatedBy.
     * @param value value to set the Updated_By
     */
    public void setUpdatedBy(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updated_Date using the alias name UpdatedDate.
     * @return the Updated_Date
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_Date using the alias name UpdatedDate.
     * @param value value to set the Updated_Date
     */
    public void setUpdatedDate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for adp_sync_req_flag using the alias name adpsyncreqflag.
     * @return the adp_sync_req_flag
     */
    public String getadpsyncreqflag() {
        return (String) getAttributeInternal(ADPSYNCREQFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for adp_sync_req_flag using the alias name adpsyncreqflag.
     * @param value value to set the adp_sync_req_flag
     */
    public void setadpsyncreqflag(String value) {
        setAttributeInternal(ADPSYNCREQFLAG, value);
    }

    /**
     * Gets the attribute value for adp_plate_country_ID using the alias name adpplatecountryID.
     * @return the adp_plate_country_ID
     */
    public Integer getadpplatecountryID() {
        return (Integer) getAttributeInternal(ADPPLATECOUNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for adp_plate_country_ID using the alias name adpplatecountryID.
     * @param value value to set the adp_plate_country_ID
     */
    public void setadpplatecountryID(Integer value) {
        setAttributeInternal(ADPPLATECOUNTRYID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
