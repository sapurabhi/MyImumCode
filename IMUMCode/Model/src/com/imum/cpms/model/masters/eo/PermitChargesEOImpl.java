package com.imum.cpms.model.masters.eo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.text.DecimalFormat;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 07 11:14:30 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PermitChargesEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PRMChargesseq {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getPRMChargesseq();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setPRMChargesseq((BigDecimal)value);
            }
        }
        ,
        RuleId {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getRuleId();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setRuleId((Integer)value);
            }
        }
        ,
        VadityPeriod {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getVadityPeriod();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setVadityPeriod((BigDecimal)value);
            }
        }
        ,
        NumofVeh {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getNumofVeh();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setNumofVeh((BigDecimal)value);
            }
        }
        ,
        AdminChrg {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getAdminChrg();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setAdminChrg((BigDecimal)value);
            }
        }
        ,
        Processchrg {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getProcesschrg();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setProcesschrg((BigDecimal)value);
            }
        }
        ,
        Permitchrg {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getPermitchrg();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setPermitchrg((BigDecimal)value);
            }
        }
        ,
        Activeflag {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getActiveflag();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setActiveflag((String)value);
            }
        }
        ,
        Changedflag {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getChangedflag();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setChangedflag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Updateddate {
            public Object get(PermitChargesEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(PermitChargesEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PermitChargesEOImpl object);

        public abstract void put(PermitChargesEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRMCHARGESSEQ = AttributesEnum.PRMChargesseq.index();
    public static final int RULEID = AttributesEnum.RuleId.index();
    public static final int VADITYPERIOD = AttributesEnum.VadityPeriod.index();
    public static final int NUMOFVEH = AttributesEnum.NumofVeh.index();
    public static final int ADMINCHRG = AttributesEnum.AdminChrg.index();
    public static final int PROCESSCHRG = AttributesEnum.Processchrg.index();
    public static final int PERMITCHRG = AttributesEnum.Permitchrg.index();
    public static final int ACTIVEFLAG = AttributesEnum.Activeflag.index();
    public static final int CHANGEDFLAG = AttributesEnum.Changedflag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PermitChargesEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.masters.eo.PermitChargesEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for PRMChargesseq, using the alias name PRMChargesseq.
     * @return the PRMChargesseq
     */
    public BigDecimal getPRMChargesseq() {
        return (BigDecimal)getAttributeInternal(PRMCHARGESSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for PRMChargesseq.
     * @param value value to set the PRMChargesseq
     */
    public void setPRMChargesseq(BigDecimal value) {
        setAttributeInternal(PRMCHARGESSEQ, value);
    }

    /**
     * Gets the attribute value for RuleId, using the alias name RuleId.
     * @return the RuleId
     */
    public Integer getRuleId() {
        return (Integer)getAttributeInternal(RULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RuleId.
     * @param value value to set the RuleId
     */
    public void setRuleId(Integer value) {
        setAttributeInternal(RULEID, value);
    }

    /**
     * Gets the attribute value for VadityPeriod, using the alias name VadityPeriod.
     * @return the VadityPeriod
     */
    public BigDecimal getVadityPeriod() {
        return (BigDecimal)getAttributeInternal(VADITYPERIOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for VadityPeriod.
     * @param value value to set the VadityPeriod
     */
    public void setVadityPeriod(BigDecimal value) {
        setAttributeInternal(VADITYPERIOD, value);
    }

    /**
     * Gets the attribute value for NumofVeh, using the alias name NumofVeh.
     * @return the NumofVeh
     */
    public BigDecimal getNumofVeh() {
        return (BigDecimal)getAttributeInternal(NUMOFVEH);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumofVeh.
     * @param value value to set the NumofVeh
     */
    public void setNumofVeh(BigDecimal value) {
        setAttributeInternal(NUMOFVEH, value);
    }

    /**
     * Gets the attribute value for AdminChrg, using the alias name AdminChrg.
     * @return the AdminChrg
     */
    public BigDecimal getAdminChrg() {
       
        return (BigDecimal)getAttributeInternal(ADMINCHRG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AdminChrg.
     * @param value value to set the AdminChrg
     */
    public void setAdminChrg(BigDecimal value) {
        
        
//        String.format("%02d", value);
        setAttributeInternal(ADMINCHRG, value);
        
        
            

    }

    /**
     * Gets the attribute value for Processchrg, using the alias name Processchrg.
     * @return the Processchrg
     */
    public BigDecimal getProcesschrg() {
        return (BigDecimal)getAttributeInternal(PROCESSCHRG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Processchrg.
     * @param value value to set the Processchrg
     */
    public void setProcesschrg(BigDecimal value) {
        setAttributeInternal(PROCESSCHRG, value);
    }

    /**
     * Gets the attribute value for Permitchrg, using the alias name Permitchrg.
     * @return the Permitchrg
     */
    public BigDecimal getPermitchrg() {
        return (BigDecimal)getAttributeInternal(PERMITCHRG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Permitchrg.
     * @param value value to set the Permitchrg
     */
    public void setPermitchrg(BigDecimal value) {
        setAttributeInternal(PERMITCHRG, value);
    }

    /**
     * Gets the attribute value for Activeflag, using the alias name Activeflag.
     * @return the Activeflag
     */
    public String getActiveflag() {
        return (String)getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Activeflag.
     * @param value value to set the Activeflag
     */
    public void setActiveflag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for Changedflag, using the alias name Changedflag.
     * @return the Changedflag
     */
    public String getChangedflag() {
        return (String)getAttributeInternal(CHANGEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Changedflag.
     * @param value value to set the Changedflag
     */
    public void setChangedflag(String value) {
        setAttributeInternal(CHANGEDFLAG, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }


    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }


    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param pRMChargesseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal pRMChargesseq) {
        return new Key(new Object[]{pRMChargesseq});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
