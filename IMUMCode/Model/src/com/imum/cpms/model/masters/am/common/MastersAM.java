package com.imum.cpms.model.masters.am.common;

import java.math.BigDecimal;

import java.sql.Date;

import java.util.ArrayList;

import oracle.jbo.ApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 02 11:19:25 IST 2014
// ---------------------------------------------------------------------
public interface MastersAM extends ApplicationModule {
    void doSubmitInstitution();


    String doCustomerSubmit();

    String doCustomerNew();

    String doCustomerEdit();

    String doCusIndView();

    String doCusAddressSearch();


    String display_Meaasge(Number msg_id);


    void cb1_action_new_permitRules();

    void cb4_action_submit_PermitRules();


    void submitDocMaster();


    void doNew(String loggerName);

    void doEditInstitution(String loggerName, String mode);


    void PermitDetails(String CustomerId, String PermitSequence,
                       Number PlateId, String CategCode);

    void addNewContrMst(String encoder);

    void doNewLoc(String loggerName);

    void doEditLoc(String loggerName, String mode);

    void updateAddressSequence(BigDecimal addressSequence);


    void doNewTruck(String loggerName);

    void doEditTruck(String loggerName, String mode);


    void doAddBayDetail(String loggerName);

    Boolean getSectorRowCount();

    void uploadSectorDocs(String Sectorcode, ArrayList uploadFiles);

    Boolean doCommit();

    void createNewHoliday(String encoder);

    void updateHolidaySequence(BigDecimal holidaySequence);

    Boolean doRollback();

    void doNewWhitelist(String loggerName);

    void doEditWhitelist(String loggerName, String mode);

    void goLiveDateProcdure(String sectorCode);

    void getZonesOfSector(String Sector);

    Integer createNewVehMstDetails(String username);

    Integer createNewVehCategoryMstDetails(String username);

    Integer createNewSector(String username);


    String encryptData(String value);

    void doEditRolesMenuMst(String loggerName, String mode);

    void doNewRolesMenuMst(String loggerName);

    void submitPermitRule();

    void getSectorDocs(String Sector);

    int bayStatusForLocation();


    Boolean createNewMakeLangRec(String Lang, String MakeName,
                                 String currentMakeId, String username);

    void getLangRecForMake(String Lang, String currentMakeId);

    Boolean createNewModelLangRec(String Lang, String ModelName,
                                  String currentModelId, String username);

    void getLangRecForCtg(String Lang, String currentCtgId);

    Boolean createNewTypeLangRec(String Lang, String TypeName,
                                 String currentTypeId, String username);

    Boolean createNewCtgLangRec(String Lang, String CtgName,
                                String currentPlateCtgId, String username);

    int addNewDocMaster(String encoder);

    int NewRule(String encoder);


    void doNewAccnt(String loggerName);

    String doEditAccnt(String loggerName, String mode);

    String getHashString(String str);

    String encryptLdapData(String value);

    void convertPwdSecAns(String userId, String pwd, String secans,
                          String isPwdMod, String isSaMod, String mode);

    void doNewVehicleBlack(String loggerName);

    void doEditVehicleBlack(String loggerName, String mode);

    void doEditBlacklist(String loggerName, String mode);

    void doNewBlacklist(String loggerName);

    String CreateGenEventDetails(String depositAckSeqbigD, String NewDepSlip,
                                 String OldDepSlip, String encoder,
                                 Integer EventId);

    void createnewBeat(String username, String zonecode);

    void donewInventoryThreshold(String loggerName);

    String doEditINVStockReorderLevelDetails(String loggerName, String mode);

    void createnewRow(String username, String reasonid);
    void createRevenueGroupType(String username);

    void createRevenueTypeRow(String username, String GroupCode);

    String executePVTSearchVO(String pvtNumber);

    void CreateNewRemarks(String username, String remarks,
                          BigDecimal PRMHeaderseqBD);

    void executeCreateCourtReport();
    void CreateNewPermitDocument(String username, String fullPath,
                                 BigDecimal Prmseq, String doctype,
                                 String DOCDesc);
    Boolean PermitDocsSeibelSync();

    void emptyRowSet();

    String loctionSearch(int locid, String date);
    void doNewVehicleCountry(String loggerName);

    String doEditVehicleCountry(String loggerName, String mode);

    void doSearchPermitpvt(String modetype, String hdrseq);

    void resetPvtWriteOff();

    String getPvtWriteOffDetails(BigDecimal pvtWriteOffHeaderseq);

    BigDecimal getPvtWriteOffHeaderSeq();

    BigDecimal getPvtCount(BigDecimal pvtcount, BigDecimal hdrseq);

    void updatePvtWriteOff(int reqstatus, int pvtWriteOffHeaderseq,
                           String username);


    void addNewAssetMst(String encoder);
}
