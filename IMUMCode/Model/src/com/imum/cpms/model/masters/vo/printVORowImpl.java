package com.imum.cpms.model.masters.vo;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 09 18:51:16 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class printVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CreatedDate {
            public Object get(printVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        PlateCtgDesc {
            public Object get(printVORowImpl obj) {
                return obj.getPlateCtgDesc();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setPlateCtgDesc((String)value);
            }
        }
        ,
        PLATENUMBER {
            public Object get(printVORowImpl obj) {
                return obj.getPLATENUMBER();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setPLATENUMBER((String)value);
            }
        }
        ,
        platetypedesc {
            public Object get(printVORowImpl obj) {
                return obj.getplatetypedesc();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setplatetypedesc((String)value);
            }
        }
        ,
        platecountryname {
            public Object get(printVORowImpl obj) {
                return obj.getplatecountryname();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setplatecountryname((String)value);
            }
        }
        ,
        Plateid {
            public Object get(printVORowImpl obj) {
                return obj.getPlateid();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setPlateid((BigDecimal)value);
            }
        }
        ,
        Updatedby {
            public Object get(printVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        ColourName {
            public Object get(printVORowImpl obj) {
                return obj.getColourName();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setColourName((String)value);
            }
        }
        ,
        MakeName {
            public Object get(printVORowImpl obj) {
                return obj.getMakeName();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setMakeName((String)value);
            }
        }
        ,
        Whitelistseq {
            public Object get(printVORowImpl obj) {
                return obj.getWhitelistseq();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setWhitelistseq((BigDecimal)value);
            }
        }
        ,
        modelname {
            public Object get(printVORowImpl obj) {
                return obj.getmodelname();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setmodelname((String)value);
            }
        }
        ,
        ActiveDateFrom {
            public Object get(printVORowImpl obj) {
                return obj.getActiveDateFrom();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setActiveDateFrom((Timestamp)value);
            }
        }
        ,
        ActiveDateTo {
            public Object get(printVORowImpl obj) {
                return obj.getActiveDateTo();
            }

            public void put(printVORowImpl obj, Object value) {
                obj.setActiveDateTo((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(printVORowImpl object);

        public abstract void put(printVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int PLATECTGDESC = AttributesEnum.PlateCtgDesc.index();
    public static final int PLATENUMBER = AttributesEnum.PLATENUMBER.index();
    public static final int PLATETYPEDESC = AttributesEnum.platetypedesc.index();
    public static final int PLATECOUNTRYNAME = AttributesEnum.platecountryname.index();
    public static final int PLATEID = AttributesEnum.Plateid.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int COLOURNAME = AttributesEnum.ColourName.index();
    public static final int MAKENAME = AttributesEnum.MakeName.index();
    public static final int WHITELISTSEQ = AttributesEnum.Whitelistseq.index();
    public static final int MODELNAME = AttributesEnum.modelname.index();
    public static final int ACTIVEDATEFROM = AttributesEnum.ActiveDateFrom.index();
    public static final int ACTIVEDATETO = AttributesEnum.ActiveDateTo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public printVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedDate.
     * @param value value to set the  CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PlateCtgDesc.
     * @return the PlateCtgDesc
     */
    public String getPlateCtgDesc() {
        return (String) getAttributeInternal(PLATECTGDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PlateCtgDesc.
     * @param value value to set the  PlateCtgDesc
     */
    public void setPlateCtgDesc(String value) {
        setAttributeInternal(PLATECTGDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PLATENUMBER.
     * @return the PLATENUMBER
     */
    public String getPLATENUMBER() {
        return (String) getAttributeInternal(PLATENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PLATENUMBER.
     * @param value value to set the  PLATENUMBER
     */
    public void setPLATENUMBER(String value) {
        setAttributeInternal(PLATENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute platetypedesc.
     * @return the platetypedesc
     */
    public String getplatetypedesc() {
        return (String) getAttributeInternal(PLATETYPEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute platetypedesc.
     * @param value value to set the  platetypedesc
     */
    public void setplatetypedesc(String value) {
        setAttributeInternal(PLATETYPEDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute platecountryname.
     * @return the platecountryname
     */
    public String getplatecountryname() {
        return (String) getAttributeInternal(PLATECOUNTRYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute platecountryname.
     * @param value value to set the  platecountryname
     */
    public void setplatecountryname(String value) {
        setAttributeInternal(PLATECOUNTRYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Plateid.
     * @return the Plateid
     */
    public BigDecimal getPlateid() {
        return (BigDecimal) getAttributeInternal(PLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Plateid.
     * @param value value to set the  Plateid
     */
    public void setPlateid(BigDecimal value) {
        setAttributeInternal(PLATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Updatedby.
     * @param value value to set the  Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ColourName.
     * @return the ColourName
     */
    public String getColourName() {
        return (String) getAttributeInternal(COLOURNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ColourName.
     * @param value value to set the  ColourName
     */
    public void setColourName(String value) {
        setAttributeInternal(COLOURNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MakeName.
     * @return the MakeName
     */
    public String getMakeName() {
        return (String) getAttributeInternal(MAKENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MakeName.
     * @param value value to set the  MakeName
     */
    public void setMakeName(String value) {
        setAttributeInternal(MAKENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Whitelistseq.
     * @return the Whitelistseq
     */
    public BigDecimal getWhitelistseq() {
        return (BigDecimal) getAttributeInternal(WHITELISTSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Whitelistseq.
     * @param value value to set the  Whitelistseq
     */
    public void setWhitelistseq(BigDecimal value) {
        setAttributeInternal(WHITELISTSEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute modelname.
     * @return the modelname
     */
    public String getmodelname() {
        return (String) getAttributeInternal(MODELNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute modelname.
     * @param value value to set the  modelname
     */
    public void setmodelname(String value) {
        setAttributeInternal(MODELNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActiveDateFrom.
     * @return the ActiveDateFrom
     */
    public Timestamp getActiveDateFrom() {
        return (Timestamp) getAttributeInternal(ACTIVEDATEFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActiveDateFrom.
     * @param value value to set the  ActiveDateFrom
     */
    public void setActiveDateFrom(Timestamp value) {
        setAttributeInternal(ACTIVEDATEFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActiveDateTo.
     * @return the ActiveDateTo
     */
    public Timestamp getActiveDateTo() {
        return (Timestamp) getAttributeInternal(ACTIVEDATETO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActiveDateTo.
     * @param value value to set the  ActiveDateTo
     */
    public void setActiveDateTo(Timestamp value) {
        setAttributeInternal(ACTIVEDATETO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
