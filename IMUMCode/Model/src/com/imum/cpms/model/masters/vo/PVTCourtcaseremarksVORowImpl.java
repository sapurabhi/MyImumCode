package com.imum.cpms.model.masters.vo;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 01 18:37:07 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PVTCourtcaseremarksVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        remarksseq {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getremarksseq();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setremarksseq((BigDecimal)value);
            }
        }
        ,
        CourtReportingseq {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getCourtReportingseq();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setCourtReportingseq((BigDecimal)value);
            }
        }
        ,
        Remarks {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updatedate {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getUpdatedate();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setUpdatedate((Timestamp)value);
            }
        }
        ,
        Remarksdate {
            public Object get(PVTCourtcaseremarksVORowImpl obj) {
                return obj.getRemarksdate();
            }

            public void put(PVTCourtcaseremarksVORowImpl obj, Object value) {
                obj.setRemarksdate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PVTCourtcaseremarksVORowImpl object);

        public abstract void put(PVTCourtcaseremarksVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  


    public static final int REMARKSSEQ = AttributesEnum.remarksseq.index();
    public static final int COURTREPORTINGSEQ = AttributesEnum.CourtReportingseq.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDATE = AttributesEnum.Updatedate.index();
    public static final int REMARKSDATE = AttributesEnum.Remarksdate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PVTCourtcaseremarksVORowImpl() {
    }

    /**
     * Gets PVTCourtcaseremarksEO entity object.
     * @return the PVTCourtcaseremarksEO
     */
    public EntityImpl getPVTCourtcaseremarksEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for remarks_seq using the alias name remarksseq.
     * @return the remarks_seq
     */
    public BigDecimal getremarksseq() {
        return (BigDecimal) getAttributeInternal(REMARKSSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for remarks_seq using the alias name remarksseq.
     * @param value value to set the remarks_seq
     */
    public void setremarksseq(BigDecimal value) {
        setAttributeInternal(REMARKSSEQ, value);
    }

    /**
     * Gets the attribute value for Court_Reporting_seq using the alias name CourtReportingseq.
     * @return the Court_Reporting_seq
     */
    public BigDecimal getCourtReportingseq() {
        return (BigDecimal) getAttributeInternal(COURTREPORTINGSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for Court_Reporting_seq using the alias name CourtReportingseq.
     * @param value value to set the Court_Reporting_seq
     */
    public void setCourtReportingseq(BigDecimal value) {
        setAttributeInternal(COURTREPORTINGSEQ, value);
    }


   

    /**
     * Gets the attribute value for Remarks using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for Remarks using the alias name Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Update_date using the alias name Updatedate.
     * @return the Update_date
     */
    public Timestamp getUpdatedate() {
        return (Timestamp) getAttributeInternal(UPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Update_date using the alias name Updatedate.
     * @param value value to set the Update_date
     */
    public void setUpdatedate(Timestamp value) {
        setAttributeInternal(UPDATEDATE, value);
    }

    /**
     * Gets the attribute value for Remarks_date using the alias name Remarksdate.
     * @return the Remarks_date
     */
    public Timestamp getRemarksdate() {
        return (Timestamp) getAttributeInternal(REMARKSDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Remarks_date using the alias name Remarksdate.
     * @param value value to set the Remarks_date
     */
    public void setRemarksdate(Timestamp value) {
        setAttributeInternal(REMARKSDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
