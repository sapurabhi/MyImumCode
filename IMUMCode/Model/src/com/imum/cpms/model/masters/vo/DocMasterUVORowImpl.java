package com.imum.cpms.model.masters.vo;

import com.imum.cpms.model.masters.eo.DocMasterEOImpl;

import java.math.BigDecimal;

import java.sql.Date;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 21 15:45:46 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocMasterUVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Activeflag {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getActiveflag();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setActiveflag((String)value);
            }
        }
        ,
        Activefrom {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getActivefrom();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setActivefrom((Date)value);
            }
        }
        ,
        Activeto {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getActiveto();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setActiveto((Date)value);
            }
        }
        ,
        Changedflag {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getChangedflag();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setChangedflag((String)value);
            }
        }
        ,
        CityCode {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCityCode();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setCityCode((String)value);
            }
        }
        ,
        CountryCode {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCountryCode();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setCountryCode((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        DocCtg {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getDocCtg();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setDocCtg((String)value);
            }
        }
        ,
        DocDesc {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getDocDesc();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setDocDesc((String)value);
            }
        }
        ,
        DocName {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getDocName();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setDocName((String)value);
            }
        }
        ,
        DocSubCtg {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getDocSubCtg();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setDocSubCtg((String)value);
            }
        }
        ,
        Mandatoryflag {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getMandatoryflag();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setMandatoryflag((String)value);
            }
        }
        ,
        PRMDocMstseq {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getPRMDocMstseq();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setPRMDocMstseq((BigDecimal)value);
            }
        }
        ,
        Updatedby {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
       
        ,
        CountryLovVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCountryLovVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CityLovVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getCityLovVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocCategoryLovVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getDocCategoryLovVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PermitTypeLovVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getPermitTypeLovVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        YesNoLovVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getYesNoLovVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PermitDocCategoryLOVVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getPermitDocCategoryLOVVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PermitDocCatgLOVVO1 {
            public Object get(DocMasterUVORowImpl obj) {
                return obj.getPermitDocCatgLOVVO1();
            }

            public void put(DocMasterUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;


        private static final int firstIndex = 0;

        public abstract Object get(DocMasterUVORowImpl object);

        public abstract void put(DocMasterUVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


   // public static final int PERMITCATEGORYVO1 = AttributesEnum.PermitCategoryVO1.index();


    public static final int ACTIVEFLAG = AttributesEnum.Activeflag.index();
    public static final int ACTIVEFROM = AttributesEnum.Activefrom.index();
    public static final int ACTIVETO = AttributesEnum.Activeto.index();
    public static final int CHANGEDFLAG = AttributesEnum.Changedflag.index();
    public static final int CITYCODE = AttributesEnum.CityCode.index();
    public static final int COUNTRYCODE = AttributesEnum.CountryCode.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int DOCCTG = AttributesEnum.DocCtg.index();
    public static final int DOCDESC = AttributesEnum.DocDesc.index();
    public static final int DOCNAME = AttributesEnum.DocName.index();
    public static final int DOCSUBCTG = AttributesEnum.DocSubCtg.index();
    public static final int MANDATORYFLAG = AttributesEnum.Mandatoryflag.index();
    public static final int PRMDOCMSTSEQ = AttributesEnum.PRMDocMstseq.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
   
    public static final int COUNTRYLOVVO1 = AttributesEnum.CountryLovVO1.index();
    public static final int CITYLOVVO1 = AttributesEnum.CityLovVO1.index();
    public static final int DOCCATEGORYLOVVO1 = AttributesEnum.DocCategoryLovVO1.index();
    public static final int PERMITTYPELOVVO1 = AttributesEnum.PermitTypeLovVO1.index();
    public static final int YESNOLOVVO1 = AttributesEnum.YesNoLovVO1.index();
    public static final int PERMITDOCCATEGORYLOVVO1 = AttributesEnum.PermitDocCategoryLOVVO1.index();
    public static final int PERMITDOCCATGLOVVO1 = AttributesEnum.PermitDocCatgLOVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DocMasterUVORowImpl() {
    }

    /**
     * Gets DocMasterEO entity object.
     * @return the DocMasterEO
     */
    public DocMasterEOImpl getDocMasterEO() {
        return (DocMasterEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for PRM_Doc_Mst_seq using the alias name PRMDocMstseq.
     * @return the PRM_Doc_Mst_seq
     */
    public BigDecimal getPRMDocMstseq() {
        return (BigDecimal) getAttributeInternal(PRMDOCMSTSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for PRM_Doc_Mst_seq using the alias name PRMDocMstseq.
     * @param value value to set the PRM_Doc_Mst_seq
     */
    public void setPRMDocMstseq(BigDecimal value) {
        setAttributeInternal(PRMDOCMSTSEQ, value);
    }


   
   

    /**
     * Gets the attribute value for Country_Code using the alias name CountryCode.
     * @return the Country_Code
     */
    public String getCountryCode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Country_Code using the alias name CountryCode.
     * @param value value to set the Country_Code
     */
    public void setCountryCode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for City_Code using the alias name CityCode.
     * @return the City_Code
     */
    public String getCityCode() {
        return (String) getAttributeInternal(CITYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for City_Code using the alias name CityCode.
     * @param value value to set the City_Code
     */
    public void setCityCode(String value) {
        setAttributeInternal(CITYCODE, value);
    }

    /**
     * Gets the attribute value for Doc_Ctg using the alias name DocCtg.
     * @return the Doc_Ctg
     */
    public String getDocCtg() {
        return (String) getAttributeInternal(DOCCTG);
    }

    /**
     * Sets <code>value</code> as attribute value for Doc_Ctg using the alias name DocCtg.
     * @param value value to set the Doc_Ctg
     */
    public void setDocCtg(String value) {
        setAttributeInternal(DOCCTG, value);
    }

    /**
     * Gets the attribute value for Doc_Sub_Ctg using the alias name DocSubCtg.
     * @return the Doc_Sub_Ctg
     */
    public String getDocSubCtg() {
        return (String) getAttributeInternal(DOCSUBCTG);
    }

    /**
     * Sets <code>value</code> as attribute value for Doc_Sub_Ctg using the alias name DocSubCtg.
     * @param value value to set the Doc_Sub_Ctg
     */
    public void setDocSubCtg(String value) {
        setAttributeInternal(DOCSUBCTG, value);
    }

    /**
     * Gets the attribute value for Doc_Name using the alias name DocName.
     * @return the Doc_Name
     */
    public String getDocName() {
        return (String) getAttributeInternal(DOCNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for Doc_Name using the alias name DocName.
     * @param value value to set the Doc_Name
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**
     * Gets the attribute value for Doc_Desc using the alias name DocDesc.
     * @return the Doc_Desc
     */
    public String getDocDesc() {
        return (String) getAttributeInternal(DOCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for Doc_Desc using the alias name DocDesc.
     * @param value value to set the Doc_Desc
     */
    public void setDocDesc(String value) {
        setAttributeInternal(DOCDESC, value);
    }

    /**
     * Gets the attribute value for Mandatory_flag using the alias name Mandatoryflag.
     * @return the Mandatory_flag
     */
    public String getMandatoryflag() {
        return (String) getAttributeInternal(MANDATORYFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for Mandatory_flag using the alias name Mandatoryflag.
     * @param value value to set the Mandatory_flag
     */
    public void setMandatoryflag(String value) {
        setAttributeInternal(MANDATORYFLAG, value);
    }

    /**
     * Gets the attribute value for Active_flag using the alias name Activeflag.
     * @return the Active_flag
     */
    public String getActiveflag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_flag using the alias name Activeflag.
     * @param value value to set the Active_flag
     */
    public void setActiveflag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }


    /**
     * Gets the attribute value for Active_from using the alias name Activefrom.
     * @return the Active_from
     */
    public Date getActivefrom() {
        return (Date) getAttributeInternal(ACTIVEFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_from using the alias name Activefrom.
     * @param value value to set the Active_from
     */
    public void setActivefrom(Date value) {
        setAttributeInternal(ACTIVEFROM, value);
    }

    /**
     * Gets the attribute value for Active_to using the alias name Activeto.
     * @return the Active_to
     */
    public Date getActiveto() {
        return (Date) getAttributeInternal(ACTIVETO);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_to using the alias name Activeto.
     * @param value value to set the Active_to
     */
    public void setActiveto(Date value) {
        setAttributeInternal(ACTIVETO, value);
    }

    /**
     * Gets the attribute value for Changed_flag using the alias name Changedflag.
     * @return the Changed_flag
     */
    public String getChangedflag() {
        return (String) getAttributeInternal(CHANGEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for Changed_flag using the alias name Changedflag.
     * @param value value to set the Changed_flag
     */
    public void setChangedflag(String value) {
        setAttributeInternal(CHANGEDFLAG, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Update_date using the alias name Updatedate.
     * @return the Update_date
     */
   

    /**
     * Sets <code>value</code> as attribute value for Update_date using the alias name Updatedate.
     * @param value value to set the Update_date
     */


    /**
     * Gets the attribute value for Updated_date using the alias name Updateddate.
     * @return the Updated_date
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_date using the alias name Updateddate.
     * @param value value to set the Updated_date
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CountryLovVO1.
     */
    public RowSet getCountryLovVO1() {
        return (RowSet)getAttributeInternal(COUNTRYLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CityLovVO1.
     */
    public RowSet getCityLovVO1() {
        return (RowSet)getAttributeInternal(CITYLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocCategoryLovVO1.
     */
    public RowSet getDocCategoryLovVO1() {
        return (RowSet)getAttributeInternal(DOCCATEGORYLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PermitTypeLovVO1.
     */
    public RowSet getPermitTypeLovVO1() {
        return (RowSet)getAttributeInternal(PERMITTYPELOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoLovVO1.
     */
    public RowSet getYesNoLovVO1() {
        return (RowSet)getAttributeInternal(YESNOLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PermitCategoryVO1.
     */
   /* public RowSet getPermitCategoryVO1() {
        return (RowSet)getAttributeInternal(PERMITCATEGORYVO1);
    }*/

    /**
     * Gets the view accessor <code>RowSet</code> PermitDocCategoryLOVVO1.
     */
    public RowSet getPermitDocCategoryLOVVO1() {
        return (RowSet)getAttributeInternal(PERMITDOCCATEGORYLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PermitDocCatgLOVVO1.
     */
    public RowSet getPermitDocCatgLOVVO1() {
        return (RowSet)getAttributeInternal(PERMITDOCCATGLOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
