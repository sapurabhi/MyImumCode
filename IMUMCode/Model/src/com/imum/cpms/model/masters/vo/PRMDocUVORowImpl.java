package com.imum.cpms.model.masters.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 05 19:11:54 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PRMDocUVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DOCDesc {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getDOCDesc();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setDOCDesc((String)value);
            }
        }
        ,
        doctype {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getdoctype();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setdoctype((String)value);
            }
        }
        ,
        filepath {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getfilepath();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setfilepath((String)value);
            }
        }
        ,
        PRMHeaderseq {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getPRMHeaderseq();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setPRMHeaderseq((BigDecimal)value);
            }
        }
        ,
        DOCSEQ {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getDOCSEQ();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setDOCSEQ((BigDecimal)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        GenRefDataDetailLovVO2 {
            public Object get(PRMDocUVORowImpl obj) {
                return obj.getGenRefDataDetailLovVO2();
            }

            public void put(PRMDocUVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PRMDocUVORowImpl object);

        public abstract void put(PRMDocUVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCDESC = AttributesEnum.DOCDesc.index();
    public static final int DOCTYPE = AttributesEnum.doctype.index();
    public static final int FILEPATH = AttributesEnum.filepath.index();
    public static final int PRMHEADERSEQ = AttributesEnum.PRMHeaderseq.index();
    public static final int DOCSEQ = AttributesEnum.DOCSEQ.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int GENREFDATADETAILLOVVO2 = AttributesEnum.GenRefDataDetailLovVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PRMDocUVORowImpl() {
    }

    /**
     * Gets PRMDocEO entity object.
     * @return the PRMDocEO
     */
    public EntityImpl getPRMDocEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for DOC_Desc using the alias name DOCDesc.
     * @return the DOC_Desc
     */
    public String getDOCDesc() {
        return (String) getAttributeInternal(DOCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_Desc using the alias name DOCDesc.
     * @param value value to set the DOC_Desc
     */
    public void setDOCDesc(String value) {
        setAttributeInternal(DOCDESC, value);
    }

    /**
     * Gets the attribute value for doc_type using the alias name doctype.
     * @return the doc_type
     */
    public String getdoctype() {
        return (String) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for doc_type using the alias name doctype.
     * @param value value to set the doc_type
     */
    public void setdoctype(String value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for file_path using the alias name filepath.
     * @return the file_path
     */
    public String getfilepath() {
        return (String) getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for file_path using the alias name filepath.
     * @param value value to set the file_path
     */
    public void setfilepath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * Gets the attribute value for PRM_Header_seq using the alias name PRMHeaderseq.
     * @return the PRM_Header_seq
     */
    public BigDecimal getPRMHeaderseq() {
        return (BigDecimal) getAttributeInternal(PRMHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for PRM_Header_seq using the alias name PRMHeaderseq.
     * @param value value to set the PRM_Header_seq
     */
    public void setPRMHeaderseq(BigDecimal value) {
        setAttributeInternal(PRMHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for DOC_SEQ using the alias name DOCSEQ.
     * @return the DOC_SEQ
     */
    public BigDecimal getDOCSEQ() {
        return (BigDecimal) getAttributeInternal(DOCSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_SEQ using the alias name DOCSEQ.
     * @param value value to set the DOC_SEQ
     */
    public void setDOCSEQ(BigDecimal value) {
        setAttributeInternal(DOCSEQ, value);
    }


    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GenRefDataDetailLovVO2.
     */
    public RowSet getGenRefDataDetailLovVO2() {
        return (RowSet)getAttributeInternal(GENREFDATADETAILLOVVO2);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
