package com.imum.cpms.model.staffdeploy.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import org.apache.myfaces.trinidad.model.UploadedFile;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 10 16:50:50 IST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PIObservationDocsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        OBSRVDOCSEQ {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getOBSRVDOCSEQ();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setOBSRVDOCSEQ((BigDecimal)value);
            }
        }
        ,
        PIOBSERVATIONID {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getPIOBSERVATIONID();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setPIOBSERVATIONID((BigDecimal)value);
            }
        }
        ,
        doctype {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getdoctype();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setdoctype((Integer)value);
            }
        }
        ,
        DOCName {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getDOCName();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setDOCName((String)value);
            }
        }
        ,
        remarks {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getremarks();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setremarks((String)value);
            }
        }
        ,
        filepath {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getfilepath();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setfilepath((String)value);
            }
        }
        ,
        deleteflag {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getdeleteflag();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setdeleteflag((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        FileUpload {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getFileUpload();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setFileUpload((UploadedFile)value);
            }
        }
        ,
        FlageM {
            public Object get(PIObservationDocsVORowImpl obj) {
                return obj.getFlageM();
            }

            public void put(PIObservationDocsVORowImpl obj, Object value) {
                obj.setFlageM((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PIObservationDocsVORowImpl object);

        public abstract void put(PIObservationDocsVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int OBSRVDOCSEQ = AttributesEnum.OBSRVDOCSEQ.index();
    public static final int PIOBSERVATIONID = AttributesEnum.PIOBSERVATIONID.index();
    public static final int DOCTYPE = AttributesEnum.doctype.index();
    public static final int DOCNAME = AttributesEnum.DOCName.index();
    public static final int REMARKS = AttributesEnum.remarks.index();
    public static final int FILEPATH = AttributesEnum.filepath.index();
    public static final int DELETEFLAG = AttributesEnum.deleteflag.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int FILEUPLOAD = AttributesEnum.FileUpload.index();
    public static final int FLAGEM = AttributesEnum.FlageM.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PIObservationDocsVORowImpl() {
    }

    /**
     * Gets PIObservationDocsEO entity object.
     * @return the PIObservationDocsEO
     */
    public EntityImpl getPIObservationDocsEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for OBSRV_DOC_SEQ using the alias name OBSRVDOCSEQ.
     * @return the OBSRV_DOC_SEQ
     */
    public BigDecimal getOBSRVDOCSEQ() {
        return (BigDecimal) getAttributeInternal(OBSRVDOCSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for OBSRV_DOC_SEQ using the alias name OBSRVDOCSEQ.
     * @param value value to set the OBSRV_DOC_SEQ
     */
    public void setOBSRVDOCSEQ(BigDecimal value) {
        setAttributeInternal(OBSRVDOCSEQ, value);
    }

    /**
     * Gets the attribute value for PI_OBSERVATION_ID using the alias name PIOBSERVATIONID.
     * @return the PI_OBSERVATION_ID
     */
    public BigDecimal getPIOBSERVATIONID() {
        return (BigDecimal) getAttributeInternal(PIOBSERVATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for PI_OBSERVATION_ID using the alias name PIOBSERVATIONID.
     * @param value value to set the PI_OBSERVATION_ID
     */
    public void setPIOBSERVATIONID(BigDecimal value) {
        setAttributeInternal(PIOBSERVATIONID, value);
    }

    /**
     * Gets the attribute value for doc_type using the alias name doctype.
     * @return the doc_type
     */
    public Integer getdoctype() {
        return (Integer) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for doc_type using the alias name doctype.
     * @param value value to set the doc_type
     */
    public void setdoctype(Integer value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_Name using the alias name DOCName.
     * @return the DOC_Name
     */
    public String getDOCName() {
        return (String) getAttributeInternal(DOCNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_Name using the alias name DOCName.
     * @param value value to set the DOC_Name
     */
    public void setDOCName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**
     * Gets the attribute value for remarks using the alias name remarks.
     * @return the remarks
     */
    public String getremarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for remarks using the alias name remarks.
     * @param value value to set the remarks
     */
    public void setremarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for file_path using the alias name filepath.
     * @return the file_path
     */
    public String getfilepath() {
        return (String) getAttributeInternal(FILEPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for file_path using the alias name filepath.
     * @param value value to set the file_path
     */
    public void setfilepath(String value) {
        setAttributeInternal(FILEPATH, value);
    }

    /**
     * Gets the attribute value for delete_flag using the alias name deleteflag.
     * @return the delete_flag
     */
    public String getdeleteflag() {
        return (String) getAttributeInternal(DELETEFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for delete_flag using the alias name deleteflag.
     * @param value value to set the delete_flag
     */
    public void setdeleteflag(String value) {
        setAttributeInternal(DELETEFLAG, value);
    }

    /**
     * Gets the attribute value for Created_By using the alias name CreatedBy.
     * @return the Created_By
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_By using the alias name CreatedBy.
     * @param value value to set the Created_By
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updated_date using the alias name Updateddate.
     * @return the Updated_date
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_date using the alias name Updateddate.
     * @param value value to set the Updated_date
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileUpload.
     * @return the FileUpload
     */
    public UploadedFile getFileUpload() {
        return (UploadedFile)getAttributeInternal(FILEUPLOAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileUpload.
     * @param value value to set the  FileUpload
     */
    public void setFileUpload(UploadedFile value) {
        setAttributeInternal(FILEUPLOAD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FlageM.
     * @return the FlageM
     */
    public String getFlageM() {
        return (String) getAttributeInternal(FLAGEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FlageM.
     * @param value value to set the  FlageM
     */
    public void setFlageM(String value) {
        setAttributeInternal(FLAGEM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
