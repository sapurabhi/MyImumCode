package com.imum.cpms.model.staffdeploy.eo;

import java.sql.Date;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 28 19:28:25 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HHCAssignEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ID {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getID();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HHCID {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getHHCID();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setHHCID((String)value);
            }
        }
        ,
        PIID {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPIID();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPIID((String)value);
            }
        }
        ,
        AssignedStatus {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getAssignedStatus();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setAssignedStatus((String)value);
            }
        }
        ,
        Reassignedby {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getReassignedby();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setReassignedby((String)value);
            }
        }
        ,
        CoOrdinator {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getCoOrdinator();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setCoOrdinator((String)value);
            }
        }
        ,
        Comments {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getComments();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        IssuedDate1 {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getIssuedDate1();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setIssuedDate1((Timestamp)value);
            }
        }
        ,
        Locationid {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getLocationid();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setLocationid((Integer)value);
            }
        }
        ,
        Status {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getStatus();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        RecievedDate {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getRecievedDate();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setRecievedDate((Timestamp)value);
            }
        }
        ,
        IssuedDate2 {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getIssuedDate2();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setIssuedDate2((Timestamp)value);
            }
        }
        ,
        Shift {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getShift();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setShift((Integer)value);
            }
        }
        ,
        CreatedBy {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        Createddate {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getCreateddate();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setCreateddate((Timestamp)value);
            }
        }
        ,
        HHCReturnCondition {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getHHCReturnCondition();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setHHCReturnCondition((Integer)value);
            }
        }
        ,
        HHSNo {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getHHSNo();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setHHSNo((String)value);
            }
        }
        ,
        PrinterIssuedDate {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPrinterIssuedDate();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPrinterIssuedDate((Timestamp)value);
            }
        }
        ,
        PrinterIssuedstatusCode {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPrinterIssuedstatusCode();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPrinterIssuedstatusCode((String)value);
            }
        }
        ,
        PrinterReceivedDate {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPrinterReceivedDate();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPrinterReceivedDate((Timestamp)value);
            }
        }
        ,
        PrinterReturnCondition {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPrinterReturnCondition();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPrinterReturnCondition((Integer)value);
            }
        }
        ,
        PrinterSNo {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getPrinterSNo();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setPrinterSNo((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        updatedby {
            public Object get(HHCAssignEOImpl obj) {
                return obj.getupdatedby();
            }

            public void put(HHCAssignEOImpl obj, Object value) {
                obj.setupdatedby((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(HHCAssignEOImpl object);

        public abstract void put(HHCAssignEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.ID.index();
    public static final int HHCID = AttributesEnum.HHCID.index();
    public static final int PIID = AttributesEnum.PIID.index();
    public static final int ASSIGNEDSTATUS = AttributesEnum.AssignedStatus.index();
    public static final int REASSIGNEDBY = AttributesEnum.Reassignedby.index();
    public static final int COORDINATOR = AttributesEnum.CoOrdinator.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int ISSUEDDATE1 = AttributesEnum.IssuedDate1.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int RECIEVEDDATE = AttributesEnum.RecievedDate.index();
    public static final int ISSUEDDATE2 = AttributesEnum.IssuedDate2.index();
    public static final int SHIFT = AttributesEnum.Shift.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.Createddate.index();
    public static final int HHCRETURNCONDITION = AttributesEnum.HHCReturnCondition.index();
    public static final int HHSNO = AttributesEnum.HHSNo.index();
    public static final int PRINTERISSUEDDATE = AttributesEnum.PrinterIssuedDate.index();
    public static final int PRINTERISSUEDSTATUSCODE = AttributesEnum.PrinterIssuedstatusCode.index();
    public static final int PRINTERRECEIVEDDATE = AttributesEnum.PrinterReceivedDate.index();
    public static final int PRINTERRETURNCONDITION = AttributesEnum.PrinterReturnCondition.index();
    public static final int PRINTERSNO = AttributesEnum.PrinterSNo.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int UPDATEDBY = AttributesEnum.updatedby.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HHCAssignEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.staffdeploy.eo.HHCAssignEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for ID, using the alias name ID.
     * @return the ID
     */
    public Integer getID() {
        return (Integer)getAttributeInternal(ID);
    }


    /**
     * Gets the attribute value for HHCID, using the alias name HHCID.
     * @return the HHCID
     */
    public String getHHCID() {
        return (String)getAttributeInternal(HHCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HHCID.
     * @param value value to set the HHCID
     */
    public void setHHCID(String value) {
        setAttributeInternal(HHCID, value);
    }

    /**
     * Gets the attribute value for PIID, using the alias name PIID.
     * @return the PIID
     */
    public String getPIID() {
        return (String)getAttributeInternal(PIID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PIID.
     * @param value value to set the PIID
     */
    public void setPIID(String value) {
        setAttributeInternal(PIID, value);
    }

    /**
     * Gets the attribute value for AssignedStatus, using the alias name AssignedStatus.
     * @return the AssignedStatus
     */
    public String getAssignedStatus() {
        return (String)getAttributeInternal(ASSIGNEDSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssignedStatus.
     * @param value value to set the AssignedStatus
     */
    public void setAssignedStatus(String value) {
        setAttributeInternal(ASSIGNEDSTATUS, value);
    }

    /**
     * Gets the attribute value for Reassignedby, using the alias name Reassignedby.
     * @return the Reassignedby
     */
    public String getReassignedby() {
        return (String)getAttributeInternal(REASSIGNEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reassignedby.
     * @param value value to set the Reassignedby
     */
    public void setReassignedby(String value) {
        setAttributeInternal(REASSIGNEDBY, value);
    }

    /**
     * Gets the attribute value for CoOrdinator, using the alias name CoOrdinator.
     * @return the CoOrdinator
     */
    public String getCoOrdinator() {
        return (String)getAttributeInternal(COORDINATOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoOrdinator.
     * @param value value to set the CoOrdinator
     */
    public void setCoOrdinator(String value) {
        setAttributeInternal(COORDINATOR, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }


    /**
     * Gets the attribute value for IssuedDate1, using the alias name IssuedDate1.
     * @return the IssuedDate1
     */
    public Timestamp getIssuedDate1() {
        return (Timestamp)getAttributeInternal(ISSUEDDATE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuedDate1.
     * @param value value to set the IssuedDate1
     */
    public void setIssuedDate1(Timestamp value) {
        setAttributeInternal(ISSUEDDATE1, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the Locationid
     */
    public Integer getLocationid() {
        return (Integer)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(Integer value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for RecievedDate, using the alias name RecievedDate.
     * @return the RecievedDate
     */
    public Timestamp getRecievedDate() {
        return (Timestamp)getAttributeInternal(RECIEVEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecievedDate.
     * @param value value to set the RecievedDate
     */
    public void setRecievedDate(Timestamp value) {
        setAttributeInternal(RECIEVEDDATE, value);
    }

    /**
     * Gets the attribute value for IssuedDate2, using the alias name IssuedDate2.
     * @return the IssuedDate2
     */
    public Timestamp getIssuedDate2() {
        return (Timestamp)getAttributeInternal(ISSUEDDATE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuedDate2.
     * @param value value to set the IssuedDate2
     */
    public void setIssuedDate2(Timestamp value) {
        setAttributeInternal(ISSUEDDATE2, value);
    }

    /**
     * Gets the attribute value for Shift, using the alias name Shift.
     * @return the Shift
     */
    public Integer getShift() {
        return (Integer)getAttributeInternal(SHIFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shift.
     * @param value value to set the Shift
     */
    public void setShift(Integer value) {
        setAttributeInternal(SHIFT, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Createddate, using the alias name Createddate.
     * @return the Createddate
     */
    public Timestamp getCreateddate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createddate.
     * @param value value to set the Createddate
     */
    public void setCreateddate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for HHCReturnCondition, using the alias name HHCReturnCondition.
     * @return the HHCReturnCondition
     */
    public Integer getHHCReturnCondition() {
        return (Integer)getAttributeInternal(HHCRETURNCONDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for HHCReturnCondition.
     * @param value value to set the HHCReturnCondition
     */
    public void setHHCReturnCondition(Integer value) {
        setAttributeInternal(HHCRETURNCONDITION, value);
    }

    /**
     * Gets the attribute value for HHSNo, using the alias name HHSNo.
     * @return the HHSNo
     */
    public String getHHSNo() {
        return (String)getAttributeInternal(HHSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for HHSNo.
     * @param value value to set the HHSNo
     */
    public void setHHSNo(String value) {
        setAttributeInternal(HHSNO, value);
    }

    /**
     * Gets the attribute value for PrinterIssuedDate, using the alias name PrinterIssuedDate.
     * @return the PrinterIssuedDate
     */
    public Timestamp getPrinterIssuedDate() {
        return (Timestamp)getAttributeInternal(PRINTERISSUEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrinterIssuedDate.
     * @param value value to set the PrinterIssuedDate
     */
    public void setPrinterIssuedDate(Timestamp value) {
        setAttributeInternal(PRINTERISSUEDDATE, value);
    }

    /**
     * Gets the attribute value for PrinterIssuedstatusCode, using the alias name PrinterIssuedstatusCode.
     * @return the PrinterIssuedstatusCode
     */
    public String getPrinterIssuedstatusCode() {
        return (String)getAttributeInternal(PRINTERISSUEDSTATUSCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrinterIssuedstatusCode.
     * @param value value to set the PrinterIssuedstatusCode
     */
    public void setPrinterIssuedstatusCode(String value) {
        setAttributeInternal(PRINTERISSUEDSTATUSCODE, value);
    }

    /**
     * Gets the attribute value for PrinterReceivedDate, using the alias name PrinterReceivedDate.
     * @return the PrinterReceivedDate
     */
    public Timestamp getPrinterReceivedDate() {
        return (Timestamp)getAttributeInternal(PRINTERRECEIVEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrinterReceivedDate.
     * @param value value to set the PrinterReceivedDate
     */
    public void setPrinterReceivedDate(Timestamp value) {
        setAttributeInternal(PRINTERRECEIVEDDATE, value);
    }

    /**
     * Gets the attribute value for PrinterReturnCondition, using the alias name PrinterReturnCondition.
     * @return the PrinterReturnCondition
     */
    public Integer getPrinterReturnCondition() {
        return (Integer)getAttributeInternal(PRINTERRETURNCONDITION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrinterReturnCondition.
     * @param value value to set the PrinterReturnCondition
     */
    public void setPrinterReturnCondition(Integer value) {
        setAttributeInternal(PRINTERRETURNCONDITION, value);
    }

    /**
     * Gets the attribute value for PrinterSNo, using the alias name PrinterSNo.
     * @return the PrinterSNo
     */
    public String getPrinterSNo() {
        return (String)getAttributeInternal(PRINTERSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrinterSNo.
     * @param value value to set the PrinterSNo
     */
    public void setPrinterSNo(String value) {
        setAttributeInternal(PRINTERSNO, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for updatedby, using the alias name updatedby.
     * @return the updatedby
     */
    public String getupdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for updatedby.
     * @param value value to set the updatedby
     */
    public void setupdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param iD key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer iD) {
        return new Key(new Object[]{iD});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
