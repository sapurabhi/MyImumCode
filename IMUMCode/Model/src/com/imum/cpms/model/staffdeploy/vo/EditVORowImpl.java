package com.imum.cpms.model.staffdeploy.vo;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 27 12:29:18 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EditVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ID {
            public Object get(EditVORowImpl obj) {
                return obj.getID();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setID((BigDecimal)value);
            }
        }
        ,
        Allocid {
            public Object get(EditVORowImpl obj) {
                return obj.getAllocid();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAllocid((Integer)value);
            }
        }
        ,
        PIID {
            public Object get(EditVORowImpl obj) {
                return obj.getPIID();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setPIID((String)value);
            }
        }
        ,
        Status {
            public Object get(EditVORowImpl obj) {
                return obj.getStatus();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Sector {
            public Object get(EditVORowImpl obj) {
                return obj.getSector();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setSector((String)value);
            }
        }
        ,
        Zone {
            public Object get(EditVORowImpl obj) {
                return obj.getZone();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setZone((String)value);
            }
        }
        ,
        Beat {
            public Object get(EditVORowImpl obj) {
                return obj.getBeat();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setBeat((String)value);
            }
        }
        ,
        AssgnStDate {
            public Object get(EditVORowImpl obj) {
                return obj.getAssgnStDate();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAssgnStDate((Date)value);
            }
        }
        ,
        AssgnEndDate {
            public Object get(EditVORowImpl obj) {
                return obj.getAssgnEndDate();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAssgnEndDate((Date)value);
            }
        }
        ,
        CreatedDate {
            public Object get(EditVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setCreatedDate((Date)value);
            }
        }
        ,
        SectorVO1 {
            public Object get(EditVORowImpl obj) {
                return obj.getSectorVO1();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GenZoneMstLOVVO1 {
            public Object get(EditVORowImpl obj) {
                return obj.getGenZoneMstLOVVO1();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GenBeatMstLOVVO1 {
            public Object get(EditVORowImpl obj) {
                return obj.getGenBeatMstLOVVO1();
            }

            public void put(EditVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(EditVORowImpl object);

        public abstract void put(EditVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.ID.index();
    public static final int ALLOCID = AttributesEnum.Allocid.index();
    public static final int PIID = AttributesEnum.PIID.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int SECTOR = AttributesEnum.Sector.index();
    public static final int ZONE = AttributesEnum.Zone.index();
    public static final int BEAT = AttributesEnum.Beat.index();
    public static final int ASSGNSTDATE = AttributesEnum.AssgnStDate.index();
    public static final int ASSGNENDDATE = AttributesEnum.AssgnEndDate.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int SECTORVO1 = AttributesEnum.SectorVO1.index();
    public static final int GENZONEMSTLOVVO1 = AttributesEnum.GenZoneMstLOVVO1.index();
    public static final int GENBEATMSTLOVVO1 = AttributesEnum.GenBeatMstLOVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EditVORowImpl() {
    }

    /**
     * Gets PIAssignEO entity object.
     * @return the PIAssignEO
     */
    public EntityImpl getPIAssignEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for ID using the alias name ID.
     * @return the ID
     */
    public BigDecimal getID() {
        return (BigDecimal) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name ID.
     * @param value value to set the ID
     */
    public void setID(BigDecimal value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for Alloc_id using the alias name Allocid.
     * @return the Alloc_id
     */
    public Integer getAllocid() {
        return (Integer) getAttributeInternal(ALLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for Alloc_id using the alias name Allocid.
     * @param value value to set the Alloc_id
     */
    public void setAllocid(Integer value) {
        setAttributeInternal(ALLOCID, value);
    }

    /**
     * Gets the attribute value for PI_ID using the alias name PIID.
     * @return the PI_ID
     */
    public String getPIID() {
        return (String) getAttributeInternal(PIID);
    }

    /**
     * Sets <code>value</code> as attribute value for PI_ID using the alias name PIID.
     * @param value value to set the PI_ID
     */
    public void setPIID(String value) {
        setAttributeInternal(PIID, value);
    }

    /**
     * Gets the attribute value for Status using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for Status using the alias name Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Sector using the alias name Sector.
     * @return the Sector
     */
    public String getSector() {
        return (String) getAttributeInternal(SECTOR);
    }

    /**
     * Sets <code>value</code> as attribute value for Sector using the alias name Sector.
     * @param value value to set the Sector
     */
    public void setSector(String value) {
        setAttributeInternal(SECTOR, value);
    }

    /**
     * Gets the attribute value for Zone using the alias name Zone.
     * @return the Zone
     */
    public String getZone() {
        return (String) getAttributeInternal(ZONE);
    }

    /**
     * Sets <code>value</code> as attribute value for Zone using the alias name Zone.
     * @param value value to set the Zone
     */
    public void setZone(String value) {
        setAttributeInternal(ZONE, value);
    }

    /**
     * Gets the attribute value for Beat using the alias name Beat.
     * @return the Beat
     */
    public String getBeat() {
        return (String) getAttributeInternal(BEAT);
    }

    /**
     * Sets <code>value</code> as attribute value for Beat using the alias name Beat.
     * @param value value to set the Beat
     */
    public void setBeat(String value) {
        setAttributeInternal(BEAT, value);
    }

    /**
     * Gets the attribute value for Assgn_StDate using the alias name AssgnStDate.
     * @return the Assgn_StDate
     */
    public Date getAssgnStDate() {
        return (Date) getAttributeInternal(ASSGNSTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Assgn_StDate using the alias name AssgnStDate.
     * @param value value to set the Assgn_StDate
     */
    public void setAssgnStDate(Date value) {
        setAttributeInternal(ASSGNSTDATE, value);
    }

    /**
     * Gets the attribute value for Assgn_EndDate using the alias name AssgnEndDate.
     * @return the Assgn_EndDate
     */
    public Date getAssgnEndDate() {
        return (Date) getAttributeInternal(ASSGNENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Assgn_EndDate using the alias name AssgnEndDate.
     * @param value value to set the Assgn_EndDate
     */
    public void setAssgnEndDate(Date value) {
        setAttributeInternal(ASSGNENDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedDate using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CreatedDate using the alias name CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SectorVO1.
     */
    public RowSet getSectorVO1() {
        return (RowSet)getAttributeInternal(SECTORVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GenZoneMstLOVVO1.
     */
    public RowSet getGenZoneMstLOVVO1() {
        return (RowSet)getAttributeInternal(GENZONEMSTLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GenBeatMstLOVVO1.
     */
    public RowSet getGenBeatMstLOVVO1() {
        return (RowSet)getAttributeInternal(GENBEATMSTLOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
