package com.imum.cpms.model.transactions.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Date;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 11 15:19:58 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SalesHeaderEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
               CallableStatement stmt = null;
        try {
            stmt = getDBTransaction().createCallableStatement("{call  sequence_mst_trigger(?,?) }", 0);
            stmt.setString(1, "SALE_HDR_SEQ");            
            stmt.registerOutParameter(2, Types.BIGINT);
            stmt.execute();           
            BigDecimal SeqNum = stmt.getBigDecimal(2);
            setSalehdrseq(SeqNum);
        }  catch (Exception e) {
                        e.printStackTrace();
               }
        try {
        stmt = getDBTransaction().createCallableStatement("{call  sequence_mst_trigger(?,?) }", 0);//SEQ_NExt_val_Vchar
        stmt.setString(1, "inv_upload_seq");//SALE_RECEIPT_NUM_SEQ
        stmt.registerOutParameter(2, Types.BIGINT);//Types.VARCHAR
        stmt.execute();
        String SeqNum = stmt.getBigDecimal(2).toString();//stmt.getString(2);
            setReceiptNum(SeqNum);
        }  catch (Exception e) {
                 e.printStackTrace();
        }
            
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Salehdrseq {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getSalehdrseq();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setSalehdrseq((BigDecimal)value);
            }
        }
        ,
        ReceiptNum {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getReceiptNum();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setReceiptNum((String)value);
            }
        }
        ,
        locationid {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getlocationid();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setlocationid((String)value);
            }
        }
        ,
        Saledate {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getSaledate();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setSaledate((Date)value);
            }
        }
        ,
        CutomerID {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getCutomerID();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setCutomerID((BigDecimal)value);
            }
        }
        ,
        SaleAmt {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getSaleAmt();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setSaleAmt((BigDecimal)value);
            }
        }
        ,
        USERID {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getUSERID();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setUSERID((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        LGCReceiptnumber {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getLGCReceiptnumber();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setLGCReceiptnumber((String)value);
            }
        }
        ,
        Instflag {
            public Object get(SalesHeaderEOImpl obj) {
                return obj.getInstflag();
            }

            public void put(SalesHeaderEOImpl obj, Object value) {
                obj.setInstflag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SalesHeaderEOImpl object);

        public abstract void put(SalesHeaderEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SALEHDRSEQ = AttributesEnum.Salehdrseq.index();
    public static final int RECEIPTNUM = AttributesEnum.ReceiptNum.index();
    public static final int LOCATIONID = AttributesEnum.locationid.index();
    public static final int SALEDATE = AttributesEnum.Saledate.index();
    public static final int CUTOMERID = AttributesEnum.CutomerID.index();
    public static final int SALEAMT = AttributesEnum.SaleAmt.index();
    public static final int USERID = AttributesEnum.USERID.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int LGCRECEIPTNUMBER = AttributesEnum.LGCReceiptnumber.index();
    public static final int INSTFLAG = AttributesEnum.Instflag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SalesHeaderEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.transactions.eo.SalesHeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Salehdrseq, using the alias name Salehdrseq.
     * @return the Salehdrseq
     */
    public BigDecimal getSalehdrseq() {
        return (BigDecimal)getAttributeInternal(SALEHDRSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Salehdrseq.
     * @param value value to set the Salehdrseq
     */
    public void setSalehdrseq(BigDecimal value) {
        setAttributeInternal(SALEHDRSEQ, value);
    }

    /**
     * Gets the attribute value for ReceiptNum, using the alias name ReceiptNum.
     * @return the ReceiptNum
     */
    public String getReceiptNum() {
        return (String)getAttributeInternal(RECEIPTNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReceiptNum.
     * @param value value to set the ReceiptNum
     */
    public void setReceiptNum(String value) {
        setAttributeInternal(RECEIPTNUM, value);
    }

    /**
     * Gets the attribute value for locationid, using the alias name locationid.
     * @return the locationid
     */
    public String getlocationid() {
        return (String)getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for locationid.
     * @param value value to set the locationid
     */
    public void setlocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Saledate, using the alias name Saledate.
     * @return the Saledate
     */
    public Date getSaledate() {
        return (Date)getAttributeInternal(SALEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Saledate.
     * @param value value to set the Saledate
     */
    public void setSaledate(Date value) {
        setAttributeInternal(SALEDATE, value);
    }

    /**
     * Gets the attribute value for CutomerID, using the alias name CutomerID.
     * @return the CutomerID
     */
    public BigDecimal getCutomerID() {
        return (BigDecimal)getAttributeInternal(CUTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CutomerID.
     * @param value value to set the CutomerID
     */
    public void setCutomerID(BigDecimal value) {
        setAttributeInternal(CUTOMERID, value);
    }

    /**
     * Gets the attribute value for SaleAmt, using the alias name SaleAmt.
     * @return the SaleAmt
     */
    public BigDecimal getSaleAmt() {
        return (BigDecimal)getAttributeInternal(SALEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleAmt.
     * @param value value to set the SaleAmt
     */
    public void setSaleAmt(BigDecimal value) {
        setAttributeInternal(SALEAMT, value);
    }

    /**
     * Gets the attribute value for USERID, using the alias name USERID.
     * @return the USERID
     */
    public String getUSERID() {
        return (String)getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for USERID.
     * @param value value to set the USERID
     */
    public void setUSERID(String value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for LGCReceiptnumber, using the alias name LGCReceiptnumber.
     * @return the LGCReceiptnumber
     */
    public String getLGCReceiptnumber() {
        return (String)getAttributeInternal(LGCRECEIPTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for LGCReceiptnumber.
     * @param value value to set the LGCReceiptnumber
     */
    public void setLGCReceiptnumber(String value) {
        setAttributeInternal(LGCRECEIPTNUMBER, value);
    }

    /**
     * Gets the attribute value for Instflag, using the alias name Instflag.
     * @return the Instflag
     */
    public String getInstflag() {
        return (String)getAttributeInternal(INSTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for Instflag.
     * @param value value to set the Instflag
     */
    public void setInstflag(String value) {
        setAttributeInternal(INSTFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param salehdrseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal salehdrseq) {
        return new Key(new Object[]{salehdrseq});
    }


}
