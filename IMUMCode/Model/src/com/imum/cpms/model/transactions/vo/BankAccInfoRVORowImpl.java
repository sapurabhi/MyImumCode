package com.imum.cpms.model.transactions.vo;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 13 12:16:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BankAccInfoRVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BankInfo {
            public Object get(BankAccInfoRVORowImpl obj) {
                return obj.getBankInfo();
            }

            public void put(BankAccInfoRVORowImpl obj, Object value) {
                obj.setBankInfo((String)value);
            }
        }
        ,
        BankSeq {
            public Object get(BankAccInfoRVORowImpl obj) {
                return obj.getBankSeq();
            }

            public void put(BankAccInfoRVORowImpl obj, Object value) {
                obj.setBankSeq((BigDecimal)value);
            }
        }
        ,
        LngCode {
            public Object get(BankAccInfoRVORowImpl obj) {
                return obj.getLngCode();
            }

            public void put(BankAccInfoRVORowImpl obj, Object value) {
                obj.setLngCode((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BankAccInfoRVORowImpl object);

        public abstract void put(BankAccInfoRVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BANKINFO = AttributesEnum.BankInfo.index();
    public static final int BANKSEQ = AttributesEnum.BankSeq.index();
    public static final int LNGCODE = AttributesEnum.LngCode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BankAccInfoRVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute BankInfo.
     * @return the BankInfo
     */
    public String getBankInfo() {
        return (String) getAttributeInternal(BANKINFO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BankInfo.
     * @param value value to set the  BankInfo
     */
    public void setBankInfo(String value) {
        setAttributeInternal(BANKINFO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BankSeq.
     * @return the BankSeq
     */
    public BigDecimal getBankSeq() {
        return (BigDecimal) getAttributeInternal(BANKSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BankSeq.
     * @param value value to set the  BankSeq
     */
    public void setBankSeq(BigDecimal value) {
        setAttributeInternal(BANKSEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LngCode.
     * @return the LngCode
     */
    public String getLngCode() {
        return (String) getAttributeInternal(LNGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LngCode.
     * @param value value to set the  LngCode
     */
    public void setLngCode(String value) {
        setAttributeInternal(LNGCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
