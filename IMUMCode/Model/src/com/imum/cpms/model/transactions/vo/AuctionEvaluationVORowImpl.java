package com.imum.cpms.model.transactions.vo;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 18 16:50:06 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AuctionEvaluationVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DocMstseq {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getDocMstseq();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setDocMstseq((Integer)value);
            }
        }
        ,
        DOCstage {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getDOCstage();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setDOCstage((Integer)value);
            }
        }
        ,
        DocName {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getDocName();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setDocName((String)value);
            }
        }
        ,
        DocDesc {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getDocDesc();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setDocDesc((String)value);
            }
        }
        ,
        Mandatoryflag {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getMandatoryflag();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setMandatoryflag((String)value);
            }
        }
        ,
        Activeflag {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getActiveflag();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setActiveflag((String)value);
            }
        }
        ,
        ActivefromDate {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getActivefromDate();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setActivefromDate((Date)value);
            }
        }
        ,
        ActivetoDate {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getActivetoDate();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setActivetoDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(AuctionEvaluationVORowImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(AuctionEvaluationVORowImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AuctionEvaluationVORowImpl object);

        public abstract void put(AuctionEvaluationVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DOCMSTSEQ = AttributesEnum.DocMstseq.index();
    public static final int DOCSTAGE = AttributesEnum.DOCstage.index();
    public static final int DOCNAME = AttributesEnum.DocName.index();
    public static final int DOCDESC = AttributesEnum.DocDesc.index();
    public static final int MANDATORYFLAG = AttributesEnum.Mandatoryflag.index();
    public static final int ACTIVEFLAG = AttributesEnum.Activeflag.index();
    public static final int ACTIVEFROMDATE = AttributesEnum.ActivefromDate.index();
    public static final int ACTIVETODATE = AttributesEnum.ActivetoDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AuctionEvaluationVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocMstseq.
     * @return the DocMstseq
     */
    public Integer getDocMstseq() {
        return (Integer) getAttributeInternal(DOCMSTSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocMstseq.
     * @param value value to set the  DocMstseq
     */
    public void setDocMstseq(Integer value) {
        setAttributeInternal(DOCMSTSEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DOCstage.
     * @return the DOCstage
     */
    public Integer getDOCstage() {
        return (Integer) getAttributeInternal(DOCSTAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DOCstage.
     * @param value value to set the  DOCstage
     */
    public void setDOCstage(Integer value) {
        setAttributeInternal(DOCSTAGE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocName.
     * @return the DocName
     */
    public String getDocName() {
        return (String) getAttributeInternal(DOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocName.
     * @param value value to set the  DocName
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDesc.
     * @return the DocDesc
     */
    public String getDocDesc() {
        return (String) getAttributeInternal(DOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocDesc.
     * @param value value to set the  DocDesc
     */
    public void setDocDesc(String value) {
        setAttributeInternal(DOCDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Mandatoryflag.
     * @return the Mandatoryflag
     */
    public String getMandatoryflag() {
        return (String) getAttributeInternal(MANDATORYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Mandatoryflag.
     * @param value value to set the  Mandatoryflag
     */
    public void setMandatoryflag(String value) {
        setAttributeInternal(MANDATORYFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Activeflag.
     * @return the Activeflag
     */
    public String getActiveflag() {
        return (String) getAttributeInternal(ACTIVEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Activeflag.
     * @param value value to set the  Activeflag
     */
    public void setActiveflag(String value) {
        setAttributeInternal(ACTIVEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActivefromDate.
     * @return the ActivefromDate
     */
    public Date getActivefromDate() {
        return (Date) getAttributeInternal(ACTIVEFROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActivefromDate.
     * @param value value to set the  ActivefromDate
     */
    public void setActivefromDate(Date value) {
        setAttributeInternal(ACTIVEFROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActivetoDate.
     * @return the ActivetoDate
     */
    public Date getActivetoDate() {
        return (Date) getAttributeInternal(ACTIVETODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActivetoDate.
     * @param value value to set the  ActivetoDate
     */
    public void setActivetoDate(Date value) {
        setAttributeInternal(ACTIVETODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedBy.
     * @param value value to set the  CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CreatedDate.
     * @param value value to set the  CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Updatedby.
     * @param value value to set the  Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Updateddate.
     * @param value value to set the  Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
