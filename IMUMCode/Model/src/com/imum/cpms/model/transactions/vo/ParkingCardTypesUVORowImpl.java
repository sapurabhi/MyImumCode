package com.imum.cpms.model.transactions.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 03 18:07:08 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ParkingCardTypesUVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActiveInd {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getActiveInd();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setActiveInd((String)value);
            }
        }
        ,
        BulkSaleLimit {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getBulkSaleLimit();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setBulkSaleLimit((Integer)value);
            }
        }
        ,
        CardTypeCode {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCardTypeCode();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCardTypeCode((String)value);
            }
        }
        ,
        CardTypeName {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCardTypeName();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCardTypeName((String)value);
            }
        }
        ,
        Category {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCategory();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        }
        ,
        CostAmt {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCostAmt();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCostAmt((BigDecimal)value);
            }
        }
        ,
        Countrycode {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCountrycode();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCountrycode((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Createdby {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getCreatedby();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setCreatedby((String)value);
            }
        }
        ,
        Updatedby {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        ValDuration {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getValDuration();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setValDuration((Integer)value);
            }
        }
        ,
        amendTimeLimit {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getamendTimeLimit();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setamendTimeLimit((Integer)value);
            }
        }
        ,
        cardDenomamt {
            public Object get(ParkingCardTypesUVORowImpl obj) {
                return obj.getcardDenomamt();
            }

            public void put(ParkingCardTypesUVORowImpl obj, Object value) {
                obj.setcardDenomamt((BigDecimal)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ParkingCardTypesUVORowImpl object);

        public abstract void put(ParkingCardTypesUVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ACTIVEIND = AttributesEnum.ActiveInd.index();
    public static final int BULKSALELIMIT = AttributesEnum.BulkSaleLimit.index();
    public static final int CARDTYPECODE = AttributesEnum.CardTypeCode.index();
    public static final int CARDTYPENAME = AttributesEnum.CardTypeName.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int COSTAMT = AttributesEnum.CostAmt.index();
    public static final int COUNTRYCODE = AttributesEnum.Countrycode.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int VALDURATION = AttributesEnum.ValDuration.index();
    public static final int AMENDTIMELIMIT = AttributesEnum.amendTimeLimit.index();
    public static final int CARDDENOMAMT = AttributesEnum.cardDenomamt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ParkingCardTypesUVORowImpl() {
    }

    /**
     * Gets ParkingCardTypeEO entity object.
     * @return the ParkingCardTypeEO
     */
    public EntityImpl getParkingCardTypeEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for Active_Ind using the alias name ActiveInd.
     * @return the Active_Ind
     */
    public String getActiveInd() {
        return (String) getAttributeInternal(ACTIVEIND);
    }

    /**
     * Sets <code>value</code> as attribute value for Active_Ind using the alias name ActiveInd.
     * @param value value to set the Active_Ind
     */
    public void setActiveInd(String value) {
        setAttributeInternal(ACTIVEIND, value);
    }

    /**
     * Gets the attribute value for Bulk_Sale_Limit using the alias name BulkSaleLimit.
     * @return the Bulk_Sale_Limit
     */
    public Integer getBulkSaleLimit() {
        return (Integer) getAttributeInternal(BULKSALELIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for Bulk_Sale_Limit using the alias name BulkSaleLimit.
     * @param value value to set the Bulk_Sale_Limit
     */
    public void setBulkSaleLimit(Integer value) {
        setAttributeInternal(BULKSALELIMIT, value);
    }

    /**
     * Gets the attribute value for Card_Type_Code using the alias name CardTypeCode.
     * @return the Card_Type_Code
     */
    public String getCardTypeCode() {
        return (String) getAttributeInternal(CARDTYPECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Card_Type_Code using the alias name CardTypeCode.
     * @param value value to set the Card_Type_Code
     */
    public void setCardTypeCode(String value) {
        setAttributeInternal(CARDTYPECODE, value);
    }

    /**
     * Gets the attribute value for Card_Type_Name using the alias name CardTypeName.
     * @return the Card_Type_Name
     */
    public String getCardTypeName() {
        return (String) getAttributeInternal(CARDTYPENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for Card_Type_Name using the alias name CardTypeName.
     * @param value value to set the Card_Type_Name
     */
    public void setCardTypeName(String value) {
        setAttributeInternal(CARDTYPENAME, value);
    }

    /**
     * Gets the attribute value for Category using the alias name Category.
     * @return the Category
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for Category using the alias name Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for Cost_Amt using the alias name CostAmt.
     * @return the Cost_Amt
     */
    public BigDecimal getCostAmt() {
        return (BigDecimal) getAttributeInternal(COSTAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for Cost_Amt using the alias name CostAmt.
     * @param value value to set the Cost_Amt
     */
    public void setCostAmt(BigDecimal value) {
        setAttributeInternal(COSTAMT, value);
    }

    /**
     * Gets the attribute value for Country_code using the alias name Countrycode.
     * @return the Country_code
     */
    public String getCountrycode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for Country_code using the alias name Countrycode.
     * @param value value to set the Country_code
     */
    public void setCountrycode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for Created_Date using the alias name CreatedDate.
     * @return the Created_Date
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_Date using the alias name CreatedDate.
     * @param value value to set the Created_Date
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Created_by using the alias name Createdby.
     * @return the Created_by
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Created_by using the alias name Createdby.
     * @param value value to set the Created_by
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for Updated_by using the alias name Updatedby.
     * @return the Updated_by
     */
    public String getUpdatedby() {
        return (String) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_by using the alias name Updatedby.
     * @param value value to set the Updated_by
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updated_date using the alias name Updateddate.
     * @return the Updated_date
     */
    public Timestamp getUpdateddate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for Updated_date using the alias name Updateddate.
     * @param value value to set the Updated_date
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for Val_Duration using the alias name ValDuration.
     * @return the Val_Duration
     */
    public Integer getValDuration() {
        return (Integer) getAttributeInternal(VALDURATION);
    }

    /**
     * Sets <code>value</code> as attribute value for Val_Duration using the alias name ValDuration.
     * @param value value to set the Val_Duration
     */
    public void setValDuration(Integer value) {
        setAttributeInternal(VALDURATION, value);
    }

    /**
     * Gets the attribute value for amend_Time_Limit using the alias name amendTimeLimit.
     * @return the amend_Time_Limit
     */
    public Integer getamendTimeLimit() {
        return (Integer) getAttributeInternal(AMENDTIMELIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for amend_Time_Limit using the alias name amendTimeLimit.
     * @param value value to set the amend_Time_Limit
     */
    public void setamendTimeLimit(Integer value) {
        setAttributeInternal(AMENDTIMELIMIT, value);
    }

    /**
     * Gets the attribute value for card_Denom_amt using the alias name cardDenomamt.
     * @return the card_Denom_amt
     */
    public BigDecimal getcardDenomamt() {
        return (BigDecimal) getAttributeInternal(CARDDENOMAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for card_Denom_amt using the alias name cardDenomamt.
     * @param value value to set the card_Denom_amt
     */
    public void setcardDenomamt(BigDecimal value) {
        setAttributeInternal(CARDDENOMAMT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
