package com.imum.cpms.model.transactions.vo;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 04 11:07:46 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InventorySearchCriteriaVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CardType {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getCardType();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setCardType((String)value);
            }
        }
        ,
        CardStatus {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getCardStatus();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setCardStatus((Integer)value);
            }
        }
        ,
        FromCard {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getFromCard();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setFromCard((String)value);
            }
        }
        ,
        ToCard {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getToCard();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setToCard((String)value);
            }
        }
        ,
        Denomination {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getDenomination();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setDenomination((Integer)value);
            }
        }
        ,
        CardTypeLOVVO1 {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getCardTypeLOVVO1();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TypeDenominationVO1 {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getTypeDenominationVO1();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        InvCardStatusLOVVO1 {
            public Object get(InventorySearchCriteriaVORowImpl obj) {
                return obj.getInvCardStatusLOVVO1();
            }

            public void put(InventorySearchCriteriaVORowImpl obj,
                            Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(InventorySearchCriteriaVORowImpl object);

        public abstract void put(InventorySearchCriteriaVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CARDTYPE = AttributesEnum.CardType.index();
    public static final int CARDSTATUS = AttributesEnum.CardStatus.index();
    public static final int FROMCARD = AttributesEnum.FromCard.index();
    public static final int TOCARD = AttributesEnum.ToCard.index();
    public static final int DENOMINATION = AttributesEnum.Denomination.index();
    public static final int CARDTYPELOVVO1 = AttributesEnum.CardTypeLOVVO1.index();
    public static final int TYPEDENOMINATIONVO1 = AttributesEnum.TypeDenominationVO1.index();
    public static final int INVCARDSTATUSLOVVO1 = AttributesEnum.InvCardStatusLOVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InventorySearchCriteriaVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CardType.
     * @return the CardType
     */
    public String getCardType() {
        return (String) getAttributeInternal(CARDTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardType.
     * @param value value to set the  CardType
     */
    public void setCardType(String value) {
        setAttributeInternal(CARDTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardStatus.
     * @return the CardStatus
     */
    public Integer getCardStatus() {
        return (Integer) getAttributeInternal(CARDSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardStatus.
     * @param value value to set the  CardStatus
     */
    public void setCardStatus(Integer value) {
        setAttributeInternal(CARDSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromCard.
     * @return the FromCard
     */
    public String getFromCard() {
        return (String) getAttributeInternal(FROMCARD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromCard.
     * @param value value to set the  FromCard
     */
    public void setFromCard(String value) {
        setAttributeInternal(FROMCARD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToCard.
     * @return the ToCard
     */
    public String getToCard() {
        return (String) getAttributeInternal(TOCARD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToCard.
     * @param value value to set the  ToCard
     */
    public void setToCard(String value) {
        setAttributeInternal(TOCARD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Denomination.
     * @return the Denomination
     */
    public Integer getDenomination() {
        return (Integer) getAttributeInternal(DENOMINATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Denomination.
     * @param value value to set the  Denomination
     */
    public void setDenomination(Integer value) {
        setAttributeInternal(DENOMINATION, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CardTypeLOVVO1.
     */
    public RowSet getCardTypeLOVVO1() {
        return (RowSet)getAttributeInternal(CARDTYPELOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TypeDenominationVO1.
     */
    public RowSet getTypeDenominationVO1() {
        return (RowSet)getAttributeInternal(TYPEDENOMINATIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InvCardStatusLOVVO1.
     */
    public RowSet getInvCardStatusLOVVO1() {
        return (RowSet)getAttributeInternal(INVCARDSTATUSLOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
