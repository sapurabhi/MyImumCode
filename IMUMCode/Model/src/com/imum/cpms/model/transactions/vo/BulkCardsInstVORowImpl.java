package com.imum.cpms.model.transactions.vo;

import java.math.BigDecimal;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 12 16:38:18 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BulkCardsInstVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        instid {
            public Object get(BulkCardsInstVORowImpl obj) {
                return obj.getinstid();
            }

            public void put(BulkCardsInstVORowImpl obj, Object value) {
                obj.setinstid((BigDecimal)value);
            }
        }
        ,
        instname {
            public Object get(BulkCardsInstVORowImpl obj) {
                return obj.getinstname();
            }

            public void put(BulkCardsInstVORowImpl obj, Object value) {
                obj.setinstname((String)value);
            }
        }
        ,
        primarycontact {
            public Object get(BulkCardsInstVORowImpl obj) {
                return obj.getprimarycontact();
            }

            public void put(BulkCardsInstVORowImpl obj, Object value) {
                obj.setprimarycontact((String)value);
            }
        }
        ,
        landlinenum {
            public Object get(BulkCardsInstVORowImpl obj) {
                return obj.getlandlinenum();
            }

            public void put(BulkCardsInstVORowImpl obj, Object value) {
                obj.setlandlinenum((String)value);
            }
        }
        ,
        insturl {
            public Object get(BulkCardsInstVORowImpl obj) {
                return obj.getinsturl();
            }

            public void put(BulkCardsInstVORowImpl obj, Object value) {
                obj.setinsturl((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(BulkCardsInstVORowImpl object);

        public abstract void put(BulkCardsInstVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int INSTID = AttributesEnum.instid.index();
    public static final int INSTNAME = AttributesEnum.instname.index();
    public static final int PRIMARYCONTACT = AttributesEnum.primarycontact.index();
    public static final int LANDLINENUM = AttributesEnum.landlinenum.index();
    public static final int INSTURL = AttributesEnum.insturl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BulkCardsInstVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute instid.
     * @return the instid
     */
    public BigDecimal getinstid() {
        return (BigDecimal) getAttributeInternal(INSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute instid.
     * @param value value to set the  instid
     */
    public void setinstid(BigDecimal value) {
        setAttributeInternal(INSTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute instname.
     * @return the instname
     */
    public String getinstname() {
        return (String) getAttributeInternal(INSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute instname.
     * @param value value to set the  instname
     */
    public void setinstname(String value) {
        setAttributeInternal(INSTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute primarycontact.
     * @return the primarycontact
     */
    public String getprimarycontact() {
        return (String) getAttributeInternal(PRIMARYCONTACT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute primarycontact.
     * @param value value to set the  primarycontact
     */
    public void setprimarycontact(String value) {
        setAttributeInternal(PRIMARYCONTACT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute landlinenum.
     * @return the landlinenum
     */
    public String getlandlinenum() {
        return (String) getAttributeInternal(LANDLINENUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute landlinenum.
     * @param value value to set the  landlinenum
     */
    public void setlandlinenum(String value) {
        setAttributeInternal(LANDLINENUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute insturl.
     * @return the insturl
     */
    public String getinsturl() {
        return (String) getAttributeInternal(INSTURL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute insturl.
     * @param value value to set the  insturl
     */
    public void setinsturl(String value) {
        setAttributeInternal(INSTURL, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
