package com.imum.cpms.model.transactions.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 04 19:20:00 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CardTypeMstEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CardTypeCode {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCardTypeCode();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCardTypeCode((String)value);
            }
        }
        ,
        CardTypeName {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCardTypeName();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCardTypeName((String)value);
            }
        }
        ,
        Category {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCategory();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCategory((String)value);
            }
        }
        ,
        ValDuration {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getValDuration();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setValDuration((Integer)value);
            }
        }
        ,
        CostAmt {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCostAmt();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCostAmt((BigDecimal)value);
            }
        }
        ,
        cardDenomamt {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getcardDenomamt();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setcardDenomamt((BigDecimal)value);
            }
        }
        ,
        BulkSaleLimit {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getBulkSaleLimit();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setBulkSaleLimit((Integer)value);
            }
        }
        ,
        amendTimeLimit {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getamendTimeLimit();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setamendTimeLimit((Integer)value);
            }
        }
        ,
        Countrycode {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCountrycode();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCountrycode((String)value);
            }
        }
        ,
        ActiveInd {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getActiveInd();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setActiveInd((String)value);
            }
        }
        ,
        Createdby {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCreatedby();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCreatedby((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(CardTypeMstEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(CardTypeMstEOImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CardTypeMstEOImpl object);

        public abstract void put(CardTypeMstEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CARDTYPECODE = AttributesEnum.CardTypeCode.index();
    public static final int CARDTYPENAME = AttributesEnum.CardTypeName.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int VALDURATION = AttributesEnum.ValDuration.index();
    public static final int COSTAMT = AttributesEnum.CostAmt.index();
    public static final int CARDDENOMAMT = AttributesEnum.cardDenomamt.index();
    public static final int BULKSALELIMIT = AttributesEnum.BulkSaleLimit.index();
    public static final int AMENDTIMELIMIT = AttributesEnum.amendTimeLimit.index();
    public static final int COUNTRYCODE = AttributesEnum.Countrycode.index();
    public static final int ACTIVEIND = AttributesEnum.ActiveInd.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CardTypeMstEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.transactions.eo.CardTypeMstEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for CardTypeCode, using the alias name CardTypeCode.
     * @return the CardTypeCode
     */
    public String getCardTypeCode() {
        return (String)getAttributeInternal(CARDTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CardTypeCode.
     * @param value value to set the CardTypeCode
     */
    public void setCardTypeCode(String value) {
        setAttributeInternal(CARDTYPECODE, value);
    }

    /**
     * Gets the attribute value for CardTypeName, using the alias name CardTypeName.
     * @return the CardTypeName
     */
    public String getCardTypeName() {
        return (String)getAttributeInternal(CARDTYPENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for CardTypeName.
     * @param value value to set the CardTypeName
     */
    public void setCardTypeName(String value) {
        setAttributeInternal(CARDTYPENAME, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the Category
     */
    public String getCategory() {
        return (String)getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for ValDuration, using the alias name ValDuration.
     * @return the ValDuration
     */
    public Integer getValDuration() {
        return (Integer)getAttributeInternal(VALDURATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValDuration.
     * @param value value to set the ValDuration
     */
    public void setValDuration(Integer value) {
        setAttributeInternal(VALDURATION, value);
    }

    /**
     * Gets the attribute value for CostAmt, using the alias name CostAmt.
     * @return the CostAmt
     */
    public BigDecimal getCostAmt() {
        return (BigDecimal)getAttributeInternal(COSTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CostAmt.
     * @param value value to set the CostAmt
     */
    public void setCostAmt(BigDecimal value) {
        setAttributeInternal(COSTAMT, value);
    }

    /**
     * Gets the attribute value for cardDenomamt, using the alias name cardDenomamt.
     * @return the cardDenomamt
     */
    public BigDecimal getcardDenomamt() {
        return (BigDecimal)getAttributeInternal(CARDDENOMAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for cardDenomamt.
     * @param value value to set the cardDenomamt
     */
    public void setcardDenomamt(BigDecimal value) {
        setAttributeInternal(CARDDENOMAMT, value);
    }

    /**
     * Gets the attribute value for BulkSaleLimit, using the alias name BulkSaleLimit.
     * @return the BulkSaleLimit
     */
    public Integer getBulkSaleLimit() {
        return (Integer)getAttributeInternal(BULKSALELIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BulkSaleLimit.
     * @param value value to set the BulkSaleLimit
     */
    public void setBulkSaleLimit(Integer value) {
        setAttributeInternal(BULKSALELIMIT, value);
    }

    /**
     * Gets the attribute value for amendTimeLimit, using the alias name amendTimeLimit.
     * @return the amendTimeLimit
     */
    public Integer getamendTimeLimit() {
        return (Integer)getAttributeInternal(AMENDTIMELIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for amendTimeLimit.
     * @param value value to set the amendTimeLimit
     */
    public void setamendTimeLimit(Integer value) {
        setAttributeInternal(AMENDTIMELIMIT, value);
    }

    /**
     * Gets the attribute value for Countrycode, using the alias name Countrycode.
     * @return the Countrycode
     */
    public String getCountrycode() {
        return (String)getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Countrycode.
     * @param value value to set the Countrycode
     */
    public void setCountrycode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for ActiveInd, using the alias name ActiveInd.
     * @return the ActiveInd
     */
    public String getActiveInd() {
        return (String)getAttributeInternal(ACTIVEIND);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActiveInd.
     * @param value value to set the ActiveInd
     */
    public void setActiveInd(String value) {
        setAttributeInternal(ACTIVEIND, value);
    }


    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the Createdby
     */
    public String getCreatedby() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param cardTypeCode key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cardTypeCode) {
        return new Key(new Object[]{cardTypeCode});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        CallableStatement stmt = null;
               try {
                   stmt = getDBTransaction().createCallableStatement("{call  sequence_mst_trigger(?,?) }", 0);
                   stmt.setString(1, "CARD_TYPE_CODE");            
                   stmt.registerOutParameter(2, Types.BIGINT);
                   stmt.execute();           
                   BigDecimal SeqNum = stmt.getBigDecimal(2);
                   String sequence = String.format("%f", SeqNum);
                   System.out.println("sequence in CardTypeMstEOImpl is : "+sequence);
                   sequence = sequence.substring(0, sequence.indexOf('.'));
                   System.out.println("after substring sequence in CardTypeMstEOImpl is : " + sequence);
                  setCardTypeCode(sequence);
               }  catch (Exception e) {
                               e.printStackTrace();
                      }
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
