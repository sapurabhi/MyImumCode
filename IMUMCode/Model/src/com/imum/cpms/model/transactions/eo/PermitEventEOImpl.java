package com.imum.cpms.model.transactions.eo;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 11 21:02:10 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PermitEventEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PRMEVENTseq {
            public Object get(PermitEventEOImpl obj) {
                return obj.getPRMEVENTseq();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PRMHeaderseq {
            public Object get(PermitEventEOImpl obj) {
                return obj.getPRMHeaderseq();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setPRMHeaderseq((BigDecimal)value);
            }
        }
        ,
        EVENTID {
            public Object get(PermitEventEOImpl obj) {
                return obj.getEVENTID();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setEVENTID((BigDecimal)value);
            }
        }
        ,
        EVENTDATE {
            public Object get(PermitEventEOImpl obj) {
                return obj.getEVENTDATE();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setEVENTDATE((Timestamp)value);
            }
        }
        ,
        Remarks {
            public Object get(PermitEventEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(PermitEventEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreatedDate {
            public Object get(PermitEventEOImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        Updatedby {
            public Object get(PermitEventEOImpl obj) {
                return obj.getUpdatedby();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setUpdatedby((String)value);
            }
        }
        ,
        Updateddate {
            public Object get(PermitEventEOImpl obj) {
                return obj.getUpdateddate();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setUpdateddate((Timestamp)value);
            }
        }
        ,
        EventAmt {
            public Object get(PermitEventEOImpl obj) {
                return obj.getEventAmt();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setEventAmt((BigDecimal)value);
            }
        }
        ,
        BalanceAmt {
            public Object get(PermitEventEOImpl obj) {
                return obj.getBalanceAmt();
            }

            public void put(PermitEventEOImpl obj, Object value) {
                obj.setBalanceAmt((BigDecimal)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PermitEventEOImpl object);

        public abstract void put(PermitEventEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PRMEVENTSEQ = AttributesEnum.PRMEVENTseq.index();
    public static final int PRMHEADERSEQ = AttributesEnum.PRMHeaderseq.index();
    public static final int EVENTID = AttributesEnum.EVENTID.index();
    public static final int EVENTDATE = AttributesEnum.EVENTDATE.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.Updatedby.index();
    public static final int UPDATEDDATE = AttributesEnum.Updateddate.index();
    public static final int EVENTAMT = AttributesEnum.EventAmt.index();
    public static final int BALANCEAMT = AttributesEnum.BalanceAmt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PermitEventEOImpl() {
    }

    /**
     * Gets the attribute value for PRMEVENTseq, using the alias name PRMEVENTseq.
     * @return the PRMEVENTseq
     */
    public BigDecimal getPRMEVENTseq() {
        return (BigDecimal)getAttributeInternal(PRMEVENTSEQ);
    }

    /**
     * Gets the attribute value for PRMHeaderseq, using the alias name PRMHeaderseq.
     * @return the PRMHeaderseq
     */
    public BigDecimal getPRMHeaderseq() {
        return (BigDecimal)getAttributeInternal(PRMHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for PRMHeaderseq.
     * @param value value to set the PRMHeaderseq
     */
    public void setPRMHeaderseq(BigDecimal value) {
        setAttributeInternal(PRMHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for EVENTID, using the alias name EVENTID.
     * @return the EVENTID
     */
    public BigDecimal getEVENTID() {
        return (BigDecimal)getAttributeInternal(EVENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EVENTID.
     * @param value value to set the EVENTID
     */
    public void setEVENTID(BigDecimal value) {
        setAttributeInternal(EVENTID, value);
    }

    /**
     * Gets the attribute value for EVENTDATE, using the alias name EVENTDATE.
     * @return the EVENTDATE
     */
    public Timestamp getEVENTDATE() {
        return (Timestamp)getAttributeInternal(EVENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EVENTDATE.
     * @param value value to set the EVENTDATE
     */
    public void setEVENTDATE(Timestamp value) {
        setAttributeInternal(EVENTDATE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp)getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Updatedby, using the alias name Updatedby.
     * @return the Updatedby
     */
    public String getUpdatedby() {
        return (String)getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updatedby.
     * @param value value to set the Updatedby
     */
    public void setUpdatedby(String value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Updateddate, using the alias name Updateddate.
     * @return the Updateddate
     */
    public Timestamp getUpdateddate() {
        return (Timestamp)getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Updateddate.
     * @param value value to set the Updateddate
     */
    public void setUpdateddate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for EventAmt, using the alias name EventAmt.
     * @return the EventAmt
     */
    public BigDecimal getEventAmt() {
        return (BigDecimal)getAttributeInternal(EVENTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EventAmt.
     * @param value value to set the EventAmt
     */
    public void setEventAmt(BigDecimal value) {
        setAttributeInternal(EVENTAMT, value);
    }

    /**
     * Gets the attribute value for BalanceAmt, using the alias name BalanceAmt.
     * @return the BalanceAmt
     */
    public BigDecimal getBalanceAmt() {
        return (BigDecimal)getAttributeInternal(BALANCEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BalanceAmt.
     * @param value value to set the BalanceAmt
     */
    public void setBalanceAmt(BigDecimal value) {
        setAttributeInternal(BALANCEAMT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param pRMEVENTseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal pRMEVENTseq) {
        return new Key(new Object[]{pRMEVENTseq});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.imum.cpms.model.transactions.eo.PermitEventEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
       
     
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
