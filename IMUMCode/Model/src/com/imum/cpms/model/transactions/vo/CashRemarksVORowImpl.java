package com.imum.cpms.model.transactions.vo;

import java.sql.Date;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 13 15:06:53 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CashRemarksVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DepositSlip {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getDepositSlip();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setDepositSlip((String)value);
            }
        }
        ,
        TransDate {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getTransDate();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setTransDate((Date)value);
            }
        }
        ,
        DayEndClosureremarks {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getDayEndClosureremarks();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setDayEndClosureremarks((String)value);
            }
        }
        ,
        ShiftID {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getShiftID();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setShiftID((Integer)value);
            }
        }
        ,
        shiftEndClosureRamarks {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getshiftEndClosureRamarks();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setshiftEndClosureRamarks((String)value);
            }
        }
        ,
        StockverifyFlag {
            public Object get(CashRemarksVORowImpl obj) {
                return obj.getStockverifyFlag();
            }

            public void put(CashRemarksVORowImpl obj, Object value) {
                obj.setStockverifyFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(CashRemarksVORowImpl object);

        public abstract void put(CashRemarksVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEPOSITSLIP = AttributesEnum.DepositSlip.index();
    public static final int TRANSDATE = AttributesEnum.TransDate.index();
    public static final int DAYENDCLOSUREREMARKS = AttributesEnum.DayEndClosureremarks.index();
    public static final int SHIFTID = AttributesEnum.ShiftID.index();
    public static final int SHIFTENDCLOSURERAMARKS = AttributesEnum.shiftEndClosureRamarks.index();
    public static final int STOCKVERIFYFLAG = AttributesEnum.StockverifyFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CashRemarksVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DepositSlip.
     * @return the DepositSlip
     */
    public String getDepositSlip() {
        return (String) getAttributeInternal(DEPOSITSLIP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepositSlip.
     * @param value value to set the  DepositSlip
     */
    public void setDepositSlip(String value) {
        setAttributeInternal(DEPOSITSLIP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDate.
     * @return the TransDate
     */
    public Date getTransDate() {
        return (Date) getAttributeInternal(TRANSDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDate.
     * @param value value to set the  TransDate
     */
    public void setTransDate(Date value) {
        setAttributeInternal(TRANSDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DayEndClosureremarks.
     * @return the DayEndClosureremarks
     */
    public String getDayEndClosureremarks() {
        return (String) getAttributeInternal(DAYENDCLOSUREREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DayEndClosureremarks.
     * @param value value to set the  DayEndClosureremarks
     */
    public void setDayEndClosureremarks(String value) {
        setAttributeInternal(DAYENDCLOSUREREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftID.
     * @return the ShiftID
     */
    public Integer getShiftID() {
        return (Integer) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShiftID.
     * @param value value to set the  ShiftID
     */
    public void setShiftID(Integer value) {
        setAttributeInternal(SHIFTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute shiftEndClosureRamarks.
     * @return the shiftEndClosureRamarks
     */
    public String getshiftEndClosureRamarks() {
        return (String) getAttributeInternal(SHIFTENDCLOSURERAMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute shiftEndClosureRamarks.
     * @param value value to set the  shiftEndClosureRamarks
     */
    public void setshiftEndClosureRamarks(String value) {
        setAttributeInternal(SHIFTENDCLOSURERAMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockverifyFlag.
     * @return the StockverifyFlag
     */
    public String getStockverifyFlag() {
        return (String) getAttributeInternal(STOCKVERIFYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockverifyFlag.
     * @param value value to set the  StockverifyFlag
     */
    public void setStockverifyFlag(String value) {
        setAttributeInternal(STOCKVERIFYFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
