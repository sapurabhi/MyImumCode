package com.imum.cpms.model.transactions.vo;

import java.math.BigDecimal;

import java.sql.Date;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 25 16:50:38 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InventorySaleAccDetailsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Cardnumfrom {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getCardnumfrom();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setCardnumfrom((String)value);
            }
        }
        ,
        Cardnumto {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getCardnumto();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setCardnumto((String)value);
            }
        }
        ,
        SaleAmt {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getSaleAmt();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setSaleAmt((BigDecimal)value);
            }
        }
        ,
        BulkSaleFlag {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getBulkSaleFlag();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setBulkSaleFlag((String)value);
            }
        }
        ,
        accdate {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getaccdate();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setaccdate((Date)value);
            }
        }
        ,
        acccode {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getacccode();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setacccode((String)value);
            }
        }
        ,
        accdesc {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getaccdesc();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setaccdesc((String)value);
            }
        }
        ,
        dramnt {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getdramnt();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setdramnt((BigDecimal)value);
            }
        }
        ,
        cramnt {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getcramnt();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setcramnt((BigDecimal)value);
            }
        }
        ,
        cardnum {
            public Object get(InventorySaleAccDetailsVORowImpl obj) {
                return obj.getcardnum();
            }

            public void put(InventorySaleAccDetailsVORowImpl obj,
                            Object value) {
                obj.setcardnum((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(InventorySaleAccDetailsVORowImpl object);

        public abstract void put(InventorySaleAccDetailsVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CARDNUMFROM = AttributesEnum.Cardnumfrom.index();
    public static final int CARDNUMTO = AttributesEnum.Cardnumto.index();
    public static final int SALEAMT = AttributesEnum.SaleAmt.index();
    public static final int BULKSALEFLAG = AttributesEnum.BulkSaleFlag.index();
    public static final int ACCDATE = AttributesEnum.accdate.index();
    public static final int ACCCODE = AttributesEnum.acccode.index();
    public static final int ACCDESC = AttributesEnum.accdesc.index();
    public static final int DRAMNT = AttributesEnum.dramnt.index();
    public static final int CRAMNT = AttributesEnum.cramnt.index();
    public static final int CARDNUM = AttributesEnum.cardnum.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InventorySaleAccDetailsVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Cardnumfrom.
     * @return the Cardnumfrom
     */
    public String getCardnumfrom() {
        return (String) getAttributeInternal(CARDNUMFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cardnumfrom.
     * @param value value to set the  Cardnumfrom
     */
    public void setCardnumfrom(String value) {
        setAttributeInternal(CARDNUMFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Cardnumto.
     * @return the Cardnumto
     */
    public String getCardnumto() {
        return (String) getAttributeInternal(CARDNUMTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cardnumto.
     * @param value value to set the  Cardnumto
     */
    public void setCardnumto(String value) {
        setAttributeInternal(CARDNUMTO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SaleAmt.
     * @return the SaleAmt
     */
    public BigDecimal getSaleAmt() {
        return (BigDecimal) getAttributeInternal(SALEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SaleAmt.
     * @param value value to set the  SaleAmt
     */
    public void setSaleAmt(BigDecimal value) {
        setAttributeInternal(SALEAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BulkSaleFlag.
     * @return the BulkSaleFlag
     */
    public String getBulkSaleFlag() {
        return (String) getAttributeInternal(BULKSALEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BulkSaleFlag.
     * @param value value to set the  BulkSaleFlag
     */
    public void setBulkSaleFlag(String value) {
        setAttributeInternal(BULKSALEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute accdate.
     * @return the accdate
     */
    public Date getaccdate() {
        return (Date) getAttributeInternal(ACCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute accdate.
     * @param value value to set the  accdate
     */
    public void setaccdate(Date value) {
        setAttributeInternal(ACCDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute acccode.
     * @return the acccode
     */
    public String getacccode() {
        return (String) getAttributeInternal(ACCCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute acccode.
     * @param value value to set the  acccode
     */
    public void setacccode(String value) {
        setAttributeInternal(ACCCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute accdesc.
     * @return the accdesc
     */
    public String getaccdesc() {
        return (String) getAttributeInternal(ACCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute accdesc.
     * @param value value to set the  accdesc
     */
    public void setaccdesc(String value) {
        setAttributeInternal(ACCDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dramnt.
     * @return the dramnt
     */
    public BigDecimal getdramnt() {
        return (BigDecimal) getAttributeInternal(DRAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute dramnt.
     * @param value value to set the  dramnt
     */
    public void setdramnt(BigDecimal value) {
        setAttributeInternal(DRAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cramnt.
     * @return the cramnt
     */
    public BigDecimal getcramnt() {
        return (BigDecimal) getAttributeInternal(CRAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cramnt.
     * @param value value to set the  cramnt
     */
    public void setcramnt(BigDecimal value) {
        setAttributeInternal(CRAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cardnum.
     * @return the cardnum
     */
    public String getcardnum() {
        return (String) getAttributeInternal(CARDNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cardnum.
     * @param value value to set the  cardnum
     */
    public void setcardnum(String value) {
        setAttributeInternal(CARDNUM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
